{"ast":null,"code":"var _jsxFileName = \"/Users/zhouyehong-natalie/Desktop/2025.02 LLM \\u8F85\\u52A9Future-Oriented Design\\u8BBE\\u8BA1/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { db, collection, addDoc, updateDoc, doc } from \"./firebase\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State management\n  const [activeGroup, setActiveGroup] = useState(\"A\");\n\n  // Group A states\n  const [designerGoalA, setDesignerGoalA] = useState(\"\");\n  const [userProfilesA, setUserProfilesA] = useState([{\n    dimension: \"User ID\",\n    content: \"\"\n  }, {\n    dimension: \"Age\",\n    content: \"\"\n  }, {\n    dimension: \"Gender\",\n    content: \"\"\n  }, {\n    dimension: \"TAM Group\",\n    content: \"\"\n  }, {\n    dimension: \"Commuting Situation\",\n    content: \"\"\n  }]);\n  const [customPromptA, setCustomPromptA] = useState(\"\");\n  const [apiKeyA, setApiKeyA] = useState(\"\");\n  const [designGuideA, setDesignGuideA] = useState(\"\");\n  const [designerNotes, setDesignerNotes] = useState(\"\");\n  const [loadingA, setLoadingA] = useState(false);\n  const [currentDocIdA, setCurrentDocIdA] = useState(null);\n\n  // GPT-4o parameters for Group A\n  const [temperatureA, setTemperatureA] = useState(0.7);\n  const [maxTokensA, setMaxTokensA] = useState(2000);\n  const [topPA, setTopPA] = useState(1.0);\n\n  // Group B states\n  const [designerGoalB, setDesignerGoalB] = useState(\"\");\n  const [userProfilesB, setUserProfilesB] = useState([{\n    dimension: \"User ID\",\n    content: \"\"\n  }, {\n    dimension: \"Age\",\n    content: \"\"\n  }, {\n    dimension: \"Gender\",\n    content: \"\"\n  }, {\n    dimension: \"TAM Group\",\n    content: \"\"\n  }, {\n    dimension: \"Commuting Situation\",\n    content: \"\"\n  }]);\n  const [customPromptB, setCustomPromptB] = useState(\"\");\n  const [apiKeyB, setApiKeyB] = useState(\"\");\n  const [designGuideB, setDesignGuideB] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\");\n  const [suggestedDimensions, setSuggestedDimensions] = useState(\"\");\n  const [loadingB, setLoadingB] = useState(false);\n  const [currentDocIdB, setCurrentDocIdB] = useState(null);\n\n  // GPT-4o parameters for Group B\n  const [temperatureB, setTemperatureB] = useState(0.7);\n  const [maxTokensB, setMaxTokensB] = useState(2000);\n  const [topPB, setTopPB] = useState(1.0);\n\n  // Group C states (Silicon Sample)\n  const [userIdC, setUserIdC] = useState(\"\");\n  const [userProfilesC, setUserProfilesC] = useState([{\n    dimension: \"User ID\",\n    content: \"\"\n  }, {\n    dimension: \"Age\",\n    content: \"\"\n  }, {\n    dimension: \"Gender\",\n    content: \"\"\n  }, {\n    dimension: \"TAM Group\",\n    content: \"\"\n  }, {\n    dimension: \"Commuting Situation\",\n    content: \"\"\n  }]);\n  const [designerGoalC, setDesignerGoalC] = useState(\"\");\n  const [customPromptC, setCustomPromptC] = useState(\"\");\n  const [apiKeyC, setApiKeyC] = useState(\"\");\n  const [designGuideC, setDesignGuideC] = useState(\"\");\n  const [userEvaluation, setUserEvaluation] = useState(\"\");\n  const [loadingC, setLoadingC] = useState(false);\n  const [currentDocIdC, setCurrentDocIdC] = useState(null);\n\n  // GPT-4o parameters for Group C\n  const [temperatureC, setTemperatureC] = useState(0.7);\n  const [maxTokensC, setMaxTokensC] = useState(2000);\n  const [topPC, setTopPC] = useState(1.0);\n\n  // Common functions\n  const addUserProfile = group => {\n    const newDimension = {\n      dimension: \"\",\n      content: \"\"\n    };\n    if (group === \"A\") {\n      setUserProfilesA([...userProfilesA, newDimension]);\n    } else if (group === \"B\") {\n      setUserProfilesB([...userProfilesB, newDimension]);\n    } else {\n      setUserProfilesC([...userProfilesC, newDimension]);\n    }\n  };\n  const updateUserProfile = (group, index, field, value) => {\n    if (group === \"A\") {\n      const profiles = [...userProfilesA];\n      profiles[index][field] = value;\n      setUserProfilesA(profiles);\n    } else if (group === \"B\") {\n      const profiles = [...userProfilesB];\n      profiles[index][field] = value;\n      setUserProfilesB(profiles);\n    } else {\n      const profiles = [...userProfilesC];\n      profiles[index][field] = value;\n      setUserProfilesC(profiles);\n    }\n  };\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text);\n  };\n\n  // Save designer notes for Group A\n  const saveDesignerNotes = async () => {\n    if (!currentDocIdA || !designerNotes.trim()) return;\n    try {\n      const docRef = doc(db, \"groupA\", currentDocIdA);\n      await updateDoc(docRef, {\n        designerNotes: designerNotes\n      });\n    } catch (error) {\n      console.error(\"Error saving notes:\", error);\n    }\n  };\n\n  // Save user evaluation for Group C\n  const saveUserEvaluation = async () => {\n    if (!currentDocIdC || !userEvaluation.trim()) return;\n    try {\n      const docRef = doc(db, \"groupC\", currentDocIdC);\n      await updateDoc(docRef, {\n        userEvaluation: userEvaluation,\n        evaluationTimestamp: new Date()\n      });\n    } catch (error) {\n      console.error(\"Error saving evaluation:\", error);\n    }\n  };\n\n  // Design guide generation\n  const generateDesignGuide = async group => {\n    let states;\n    if (group === \"A\") {\n      states = {\n        apiKey: apiKeyA,\n        designerGoal: designerGoalA,\n        userProfiles: userProfilesA,\n        customPrompt: customPromptA,\n        setLoading: setLoadingA,\n        setDesignGuide: setDesignGuideA,\n        setCurrentDocId: setCurrentDocIdA,\n        temperature: temperatureA,\n        maxTokens: maxTokensA,\n        topP: topPA\n      };\n    } else if (group === \"B\") {\n      states = {\n        apiKey: apiKeyB,\n        designerGoal: designerGoalB,\n        userProfiles: userProfilesB,\n        customPrompt: customPromptB,\n        setLoading: setLoadingB,\n        setDesignGuide: setDesignGuideB,\n        setCurrentDocId: setCurrentDocIdB,\n        temperature: temperatureB,\n        maxTokens: maxTokensB,\n        topP: topPB\n      };\n    } else {\n      states = {\n        apiKey: apiKeyC,\n        designerGoal: designerGoalC,\n        userProfiles: userProfilesC,\n        customPrompt: customPromptC,\n        setLoading: setLoadingC,\n        setDesignGuide: setDesignGuideC,\n        setCurrentDocId: setCurrentDocIdC,\n        temperature: temperatureC,\n        maxTokens: maxTokensC,\n        topP: topPC\n      };\n    }\n    if (!states.apiKey) {\n      states.setDesignGuide(\"Please provide OpenAI API Key\");\n      return;\n    }\n    states.setLoading(true);\n    try {\n      var _data$choices$, _data$choices$$messag;\n      const profileText = states.userProfiles.map(p => `${p.dimension}: ${p.content}`).join(\"\\n\");\n      let fullPrompt;\n      if (group === \"C\") {\n        // For Group C, create a digital clone simulation prompt\n        fullPrompt = `You are creating a design guide for a digital clone of user \"${userIdC}\". \n        \nDesigner Goal: ${states.designerGoal}\n\nUser Profile:\n${profileText}\n\nCustom Prompt: ${states.customPrompt}\n\nBased on this user profile, generate a comprehensive design guide that would be most suitable for this specific user.`;\n      } else {\n        fullPrompt = `Designer Goal: ${states.designerGoal}\\nUser Profiles:\\n${profileText}\\nCustom Prompt: ${states.customPrompt}`;\n      }\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${states.apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: fullPrompt\n          }],\n          temperature: states.temperature,\n          max_tokens: states.maxTokens,\n          top_p: states.topP\n        })\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      const result = ((_data$choices$ = data.choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || \"Generation failed\";\n      states.setDesignGuide(result);\n\n      // Store data in Firebase with different structures for different groups\n      const docData = {\n        designerGoal: states.designerGoal,\n        userProfiles: states.userProfiles,\n        customPrompt: states.customPrompt,\n        prompt: fullPrompt,\n        result: result,\n        timestamp: new Date(),\n        temperature: states.temperature,\n        maxTokens: states.maxTokens,\n        topP: states.topP\n      };\n\n      // Group specific additional fields\n      if (group === \"A\") {\n        docData.designerNotes = designerNotes;\n      } else if (group === \"B\") {\n        docData.userFeedback = \"\";\n        docData.suggestedDimensions = \"\";\n      } else if (group === \"C\") {\n        docData.userId = userIdC;\n        docData.userEvaluation = \"\";\n      }\n      const collectionRef = collection(db, `group${group}`);\n      const docRef = await addDoc(collectionRef, docData);\n      states.setCurrentDocId(docRef.id);\n    } catch (error) {\n      console.error(\"API Error:\", error);\n      states.setDesignGuide(`Error: ${error.message}`);\n    } finally {\n      states.setLoading(false);\n    }\n  };\n\n  // Generate suggested dimensions\n  const generateSuggestedDimensions = async () => {\n    if (!userFeedback.trim() || !apiKeyB) {\n      setSuggestedDimensions(\"Please provide feedback and API key\");\n      return;\n    }\n    if (!currentDocIdB) {\n      setSuggestedDimensions(\"No design guide generated yet. Please generate a design guide first.\");\n      return;\n    }\n    setLoadingB(true);\n    try {\n      var _data$choices$2, _data$choices$2$messa;\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKeyB}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: `Based on this user feedback: \"${userFeedback}\"\\n\\nExtract or suggest SHORT dimension phrases (like \"Environmental Attitude\", \"Price Sensitivity\", \"Technology Acceptance\") that could be used as user profile dimensions. Return ONLY the dimension phrases, one per line, with no explanations, numbering, or additional text.`\n          }],\n          temperature: temperatureB,\n          max_tokens: maxTokensB,\n          top_p: topPB\n        })\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      const dimensions = ((_data$choices$2 = data.choices[0]) === null || _data$choices$2 === void 0 ? void 0 : (_data$choices$2$messa = _data$choices$2.message) === null || _data$choices$2$messa === void 0 ? void 0 : _data$choices$2$messa.content) || \"Generation failed\";\n      setSuggestedDimensions(dimensions);\n\n      // Update the existing group B document instead of creating a new one\n      const docRef = doc(db, \"groupB\", currentDocIdB);\n      await updateDoc(docRef, {\n        userFeedback: userFeedback,\n        suggestedDimensions: dimensions,\n        feedbackTimestamp: new Date()\n      });\n    } catch (error) {\n      console.error(\"Generation failed:\", error);\n      setSuggestedDimensions(`Error: ${error.message}`);\n    } finally {\n      setLoadingB(false);\n    }\n  };\n\n  // UI Components\n  const renderGroupA = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Designer Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter AI designer goal...\",\n        value: designerGoalA,\n        onChange: e => setDesignerGoalA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Dimensions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), userProfilesA.map((profile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"user-dimension\",\n          value: profile.dimension,\n          onChange: e => updateUserProfile(\"A\", index, \"dimension\", e.target.value),\n          placeholder: \"Dimension name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"user-content\",\n          value: profile.content,\n          onChange: e => updateUserProfile(\"A\", index, \"content\", e.target.value),\n          placeholder: \"Dimension content...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => addUserProfile(\"A\"),\n        children: \"Add Dimension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Custom Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter custom prompt...\",\n        value: customPromptA,\n        onChange: e => setCustomPromptA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OpenAI API Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter API key...\",\n        value: apiKeyA,\n        onChange: e => setApiKeyA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Model Parameters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-params\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"param-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Temperature: \", temperatureA]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.1\",\n            value: temperatureA,\n            onChange: e => setTemperatureA(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"param-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Max Tokens: \", maxTokensA]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"500\",\n            max: \"8000\",\n            step: \"500\",\n            value: maxTokensA,\n            onChange: e => setMaxTokensA(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"param-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Top P: \", topPA]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.1\",\n            value: topPA,\n            onChange: e => setTopPA(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"full-width generate-button\",\n        onClick: () => generateDesignGuide(\"A\"),\n        disabled: loadingA,\n        children: loadingA ? \"Generating...\" : \"Generate Design Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-section expanded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"guide-header\",\n        children: [\"Design Guide\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: () => copyToClipboard(designGuideA),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"design-guide-box\",\n        readOnly: true,\n        value: designGuideA,\n        placeholder: \"Generated content will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"notes-header\",\n        children: [\"Expert Notes\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: saveDesignerNotes,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"notes-box\",\n        placeholder: \"Enter expert notes...\",\n        value: designerNotes,\n        onChange: e => setDesignerNotes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const renderGroupB = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Designer Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter AI designer goal...\",\n        value: designerGoalB,\n        onChange: e => setDesignerGoalB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Dimensions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), userProfilesB.map((profile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"user-dimension\",\n          value: profile.dimension,\n          onChange: e => updateUserProfile(\"B\", index, \"dimension\", e.target.value),\n          placeholder: \"Dimension name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"user-content\",\n          value: profile.content,\n          onChange: e => updateUserProfile(\"B\", index, \"content\", e.target.value),\n          placeholder: \"Dimension content...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => addUserProfile(\"B\"),\n        children: \"Add Dimension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Custom Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter custom prompt...\",\n        value: customPromptB,\n        onChange: e => setCustomPromptB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OpenAI API Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter API key...\",\n        value: apiKeyB,\n        onChange: e => setApiKeyB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Model Parameters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-params\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"param-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Temperature: \", temperatureB]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.1\",\n            value: temperatureB,\n            onChange: e => setTemperatureB(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"param-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Max Tokens: \", maxTokensB]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"500\",\n            max: \"8000\",\n            step: \"500\",\n            value: maxTokensB,\n            onChange: e => setMaxTokensB(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"param-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Top P: \", topPB]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.1\",\n            value: topPB,\n            onChange: e => setTopPB(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"full-width generate-button\",\n        onClick: () => generateDesignGuide(\"B\"),\n        disabled: loadingB,\n        children: loadingB ? \"Generating...\" : \"Generate Design Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-section expanded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"guide-header\",\n        children: [\"Design Guide\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: () => copyToClipboard(designGuideB),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"design-guide-box\",\n        readOnly: true,\n        value: designGuideB,\n        placeholder: \"Generated content will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"feedback-header\",\n          children: \"User Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"feedback-box\",\n          placeholder: \"Enter your feedback...\",\n          value: userFeedback,\n          onChange: e => setUserFeedback(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-dimensions-button\",\n          onClick: generateSuggestedDimensions,\n          disabled: loadingB,\n          children: loadingB ? \"Generating...\" : \"Suggest New Dimensions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"suggested-dimensions-header\",\n          children: \"Suggested Dimensions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"suggested-dimensions-box\",\n          readOnly: true,\n          value: suggestedDimensions,\n          placeholder: \"Short dimension phrases will appear here (one per line)...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const renderGroupC = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Digital Clone User ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter user ID (e.g. B1, B2, B3, etc.)...\",\n        value: userIdC,\n        onChange: e => setUserIdC(e.target.value),\n        className: \"full-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Designer Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter AI designer goal...\",\n        value: designerGoalC,\n        onChange: e => setDesignerGoalC(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Dimensions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), userProfilesC.map((profile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"user-dimension\",\n          value: profile.dimension,\n          onChange: e => updateUserProfile(\"C\", index, \"dimension\", e.target.value),\n          placeholder: \"Dimension name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"user-content\",\n          value: profile.content,\n          onChange: e => updateUserProfile(\"C\", index, \"content\", e.target.value),\n          placeholder: \"Dimension content...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => addUserProfile(\"C\"),\n        children: \"Add Dimension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Custom Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter custom prompt...\",\n        value: customPromptC,\n        onChange: e => setCustomPromptC(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OpenAI API Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter API key...\",\n        value: apiKeyC,\n        onChange: e => setApiKeyC(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Model Parameters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-params\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"param-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Temperature: \", temperatureC]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.1\",\n            value: temperatureC,\n            onChange: e => setTemperatureC(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"param-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Max Tokens: \", maxTokensC]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"500\",\n            max: \"8000\",\n            step: \"500\",\n            value: maxTokensC,\n            onChange: e => setMaxTokensC(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"param-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Top P: \", topPC]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.1\",\n            value: topPC,\n            onChange: e => setTopPC(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"full-width generate-button\",\n        onClick: () => generateDesignGuide(\"C\"),\n        disabled: loadingC,\n        children: loadingC ? \"Generating...\" : \"Generate Digital Clone Design Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-section expanded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"guide-header\",\n        children: [\"Design Guide for Digital Clone \", userIdC || \"User\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: () => copyToClipboard(designGuideC),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"design-guide-box\",\n        readOnly: true,\n        value: designGuideC,\n        placeholder: \"Generated design guide for digital clone will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"evaluation-header\",\n        children: [\"Real User Evaluation\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: saveUserEvaluation,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"notes-box\",\n        placeholder: \"Enter real user's evaluation of this digital clone's design guide...\",\n        value: userEvaluation,\n        onChange: e => setUserEvaluation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"Human-AI Collaborative Method for Future-Oriented Design Prompt System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `group-button ${activeGroup === \"A\" ? \"active\" : \"\"}`,\n          onClick: () => setActiveGroup(\"A\"),\n          children: \"Group A (with Design Expert)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `group-button ${activeGroup === \"B\" ? \"active\" : \"\"}`,\n          onClick: () => setActiveGroup(\"B\"),\n          children: \"Group B (without Design Expert)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `group-button ${activeGroup === \"C\" ? \"active\" : \"\"}`,\n          onClick: () => setActiveGroup(\"C\"),\n          children: \"Group C (Silicon Sample)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: activeGroup === \"A\" ? renderGroupA() : activeGroup === \"B\" ? renderGroupB() : renderGroupC()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          /* ✅ 解决背景白色问题 */\n          html, body {\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            font-family: Arial, sans-serif;\n            background: #121212;\n            color: #ffffff;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n\n          .page-title {\n            text-align: center;\n            font-size: 18px;\n            margin-top: 10px;\n            color: #bb86fc;\n          }\n\n          .layout-container {\n            display: flex;\n            flex-direction: column;\n            width: 95vw;\n            height: 95vh;\n          }\n\n          .group-selector {\n            display: flex;\n            justify-content: flex-start;\n            margin-bottom: 10px;\n          }\n\n          .group-button {\n            background: #333;\n            color: white;\n            border: none;\n            border-radius: 5px 5px 0 0;\n            cursor: pointer;\n            padding: 10px 15px;\n            margin-right: 5px;\n          }\n\n          .group-button.active {\n            background: #bb86fc;\n          }\n\n          .container {\n            display: flex;\n            flex: 1;\n            background: #1e1e1e;\n            border-radius: 10px;\n            overflow: hidden;\n          }\n\n          .left-section, .right-section.expanded {\n            width: 50%;\n            display: flex;\n            flex-direction: column;\n            padding: 20px;\n            overflow-y: auto;\n          }\n\n          .user-profile-container {\n            display: flex;\n            flex-direction: row;\n            gap: 20px;\n            margin-bottom: 12px;\n          }\n\n          .user-dimension {\n            width: 40%;\n          }\n\n          .user-content {\n            width: 60%;\n          }\n\n          .generate-button, .small-button, .copy-button, .generate-dimensions-button {\n            background: #bb86fc; \n            color: white;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            padding: 8px 12px;\n            margin-bottom: 15px;\n          }\n\n          .generate-button:disabled, .generate-dimensions-button:disabled {\n            background: #666;\n            cursor: not-allowed;\n          }\n\n          .small-button {\n            width: 40%;\n          }\n\n          .copy-button {\n            font-size: 14px;\n            padding: 5px 10px;\n            background: #bb86fc;\n          }\n\n          .design-guide-box {\n            flex-grow: 1;\n            min-height: 300px;\n            margin-bottom: 15px;\n          }\n\n          .notes-box, .feedback-box, .suggested-dimensions-box {\n            min-height: 80px;\n            margin-bottom: 15px;\n          }\n\n          .feedback-section {\n            display: flex;\n            flex-direction: column;\n          }\n\n          h2 {\n            color: #bb86fc;\n            margin-bottom: 10px;\n          }\n\n          textarea, input {\n            padding: 8px;\n            border: none;\n            border-radius: 5px;\n            background: #333;\n            color: #fff;\n            margin-bottom: 10px;\n          }\n\n          input:focus, textarea:focus {\n            outline: 1px solid #bb86fc;\n          }\n\n          .full-width {\n            width: 100%;\n          }\n          \n          .model-params {\n            margin-bottom: 15px;\n          }\n          \n          .param-group {\n            margin-bottom: 10px;\n          }\n          \n          .param-group label {\n            display: block;\n            margin-bottom: 5px;\n            color: #bb86fc;\n          }\n          \n          .param-group input[type=\"range\"] {\n            width: 100%;\n            background: #333;\n          }\n          \n          .param-group input[type=\"range\"]::-webkit-slider-thumb {\n            background: #bb86fc;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 723,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zngAiv1ov7u//zI26u7FBH0Y/q8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","db","collection","addDoc","updateDoc","doc","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","activeGroup","setActiveGroup","designerGoalA","setDesignerGoalA","userProfilesA","setUserProfilesA","dimension","content","customPromptA","setCustomPromptA","apiKeyA","setApiKeyA","designGuideA","setDesignGuideA","designerNotes","setDesignerNotes","loadingA","setLoadingA","currentDocIdA","setCurrentDocIdA","temperatureA","setTemperatureA","maxTokensA","setMaxTokensA","topPA","setTopPA","designerGoalB","setDesignerGoalB","userProfilesB","setUserProfilesB","customPromptB","setCustomPromptB","apiKeyB","setApiKeyB","designGuideB","setDesignGuideB","userFeedback","setUserFeedback","suggestedDimensions","setSuggestedDimensions","loadingB","setLoadingB","currentDocIdB","setCurrentDocIdB","temperatureB","setTemperatureB","maxTokensB","setMaxTokensB","topPB","setTopPB","userIdC","setUserIdC","userProfilesC","setUserProfilesC","designerGoalC","setDesignerGoalC","customPromptC","setCustomPromptC","apiKeyC","setApiKeyC","designGuideC","setDesignGuideC","userEvaluation","setUserEvaluation","loadingC","setLoadingC","currentDocIdC","setCurrentDocIdC","temperatureC","setTemperatureC","maxTokensC","setMaxTokensC","topPC","setTopPC","addUserProfile","group","newDimension","updateUserProfile","index","field","value","profiles","copyToClipboard","text","navigator","clipboard","writeText","saveDesignerNotes","trim","docRef","error","console","saveUserEvaluation","evaluationTimestamp","Date","generateDesignGuide","states","apiKey","designerGoal","userProfiles","customPrompt","setLoading","setDesignGuide","setCurrentDocId","temperature","maxTokens","topP","_data$choices$","_data$choices$$messag","profileText","map","p","join","fullPrompt","response","fetch","method","headers","body","JSON","stringify","model","messages","role","max_tokens","top_p","ok","Error","status","data","json","result","choices","message","docData","prompt","timestamp","userId","collectionRef","id","generateSuggestedDimensions","_data$choices$2","_data$choices$2$messa","dimensions","feedbackTimestamp","renderGroupA","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","profile","onClick","type","min","max","step","parseFloat","parseInt","disabled","readOnly","renderGroupB","renderGroupC","_c","$RefreshReg$"],"sources":["/Users/zhouyehong-natalie/Desktop/2025.02 LLM 辅助Future-Oriented Design设计/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { db, collection, addDoc, updateDoc, doc } from \"./firebase\";\n\nfunction App() {\n  // State management\n  const [activeGroup, setActiveGroup] = useState(\"A\");\n  \n  // Group A states\n  const [designerGoalA, setDesignerGoalA] = useState(\"\");\n  const [userProfilesA, setUserProfilesA] = useState([\n    { dimension: \"User ID\", content: \"\" },\n    { dimension: \"Age\", content: \"\" },\n    { dimension: \"Gender\", content: \"\" },\n    { dimension: \"TAM Group\", content: \"\" },\n    { dimension: \"Commuting Situation\", content: \"\" }\n  ]);\n  const [customPromptA, setCustomPromptA] = useState(\"\");\n  const [apiKeyA, setApiKeyA] = useState(\"\");\n  const [designGuideA, setDesignGuideA] = useState(\"\");\n  const [designerNotes, setDesignerNotes] = useState(\"\");\n  const [loadingA, setLoadingA] = useState(false);\n  const [currentDocIdA, setCurrentDocIdA] = useState(null);\n  \n  // GPT-4o parameters for Group A\n  const [temperatureA, setTemperatureA] = useState(0.7);\n  const [maxTokensA, setMaxTokensA] = useState(2000);\n  const [topPA, setTopPA] = useState(1.0);\n\n  // Group B states\n  const [designerGoalB, setDesignerGoalB] = useState(\"\");\n  const [userProfilesB, setUserProfilesB] = useState([\n    { dimension: \"User ID\", content: \"\" },\n    { dimension: \"Age\", content: \"\" },\n    { dimension: \"Gender\", content: \"\" },\n    { dimension: \"TAM Group\", content: \"\" },\n    { dimension: \"Commuting Situation\", content: \"\" }\n  ]);\n  const [customPromptB, setCustomPromptB] = useState(\"\");\n  const [apiKeyB, setApiKeyB] = useState(\"\");\n  const [designGuideB, setDesignGuideB] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\");\n  const [suggestedDimensions, setSuggestedDimensions] = useState(\"\");\n  const [loadingB, setLoadingB] = useState(false);\n  const [currentDocIdB, setCurrentDocIdB] = useState(null);\n  \n  // GPT-4o parameters for Group B\n  const [temperatureB, setTemperatureB] = useState(0.7);\n  const [maxTokensB, setMaxTokensB] = useState(2000);\n  const [topPB, setTopPB] = useState(1.0);\n  \n  // Group C states (Silicon Sample)\n  const [userIdC, setUserIdC] = useState(\"\");\n  const [userProfilesC, setUserProfilesC] = useState([\n    { dimension: \"User ID\", content: \"\" },\n    { dimension: \"Age\", content: \"\" },\n    { dimension: \"Gender\", content: \"\" },\n    { dimension: \"TAM Group\", content: \"\" },\n    { dimension: \"Commuting Situation\", content: \"\" }\n  ]);\n  const [designerGoalC, setDesignerGoalC] = useState(\"\");\n  const [customPromptC, setCustomPromptC] = useState(\"\");\n  const [apiKeyC, setApiKeyC] = useState(\"\");\n  const [designGuideC, setDesignGuideC] = useState(\"\");\n  const [userEvaluation, setUserEvaluation] = useState(\"\");\n  const [loadingC, setLoadingC] = useState(false);\n  const [currentDocIdC, setCurrentDocIdC] = useState(null);\n  \n  // GPT-4o parameters for Group C\n  const [temperatureC, setTemperatureC] = useState(0.7);\n  const [maxTokensC, setMaxTokensC] = useState(2000);\n  const [topPC, setTopPC] = useState(1.0);\n\n  // Common functions\n  const addUserProfile = (group) => {\n    const newDimension = { dimension: \"\", content: \"\" };\n    if (group === \"A\") {\n      setUserProfilesA([...userProfilesA, newDimension]);\n    } else if (group === \"B\") {\n      setUserProfilesB([...userProfilesB, newDimension]);\n    } else {\n      setUserProfilesC([...userProfilesC, newDimension]);\n    }\n  };\n\n  const updateUserProfile = (group, index, field, value) => {\n    if (group === \"A\") {\n      const profiles = [...userProfilesA];\n      profiles[index][field] = value;\n      setUserProfilesA(profiles);\n    } else if (group === \"B\") {\n      const profiles = [...userProfilesB];\n      profiles[index][field] = value;\n      setUserProfilesB(profiles);\n    } else {\n      const profiles = [...userProfilesC];\n      profiles[index][field] = value;\n      setUserProfilesC(profiles);\n    }\n  };\n\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  // Save designer notes for Group A\n  const saveDesignerNotes = async () => {\n    if (!currentDocIdA || !designerNotes.trim()) return;\n    \n    try {\n      const docRef = doc(db, \"groupA\", currentDocIdA);\n      await updateDoc(docRef, {\n        designerNotes: designerNotes\n      });\n    } catch (error) {\n      console.error(\"Error saving notes:\", error);\n    }\n  };\n  \n  // Save user evaluation for Group C\n  const saveUserEvaluation = async () => {\n    if (!currentDocIdC || !userEvaluation.trim()) return;\n    \n    try {\n      const docRef = doc(db, \"groupC\", currentDocIdC);\n      await updateDoc(docRef, {\n        userEvaluation: userEvaluation,\n        evaluationTimestamp: new Date()\n      });\n    } catch (error) {\n      console.error(\"Error saving evaluation:\", error);\n    }\n  };\n\n  // Design guide generation\n  const generateDesignGuide = async (group) => {\n    let states;\n    if (group === \"A\") {\n      states = {\n        apiKey: apiKeyA,\n        designerGoal: designerGoalA,\n        userProfiles: userProfilesA,\n        customPrompt: customPromptA,\n        setLoading: setLoadingA,\n        setDesignGuide: setDesignGuideA,\n        setCurrentDocId: setCurrentDocIdA,\n        temperature: temperatureA,\n        maxTokens: maxTokensA,\n        topP: topPA\n      };\n    } else if (group === \"B\") {\n      states = {\n        apiKey: apiKeyB,\n        designerGoal: designerGoalB,\n        userProfiles: userProfilesB,\n        customPrompt: customPromptB,\n        setLoading: setLoadingB,\n        setDesignGuide: setDesignGuideB,\n        setCurrentDocId: setCurrentDocIdB,\n        temperature: temperatureB,\n        maxTokens: maxTokensB,\n        topP: topPB\n      };\n    } else {\n      states = {\n        apiKey: apiKeyC,\n        designerGoal: designerGoalC,\n        userProfiles: userProfilesC,\n        customPrompt: customPromptC,\n        setLoading: setLoadingC,\n        setDesignGuide: setDesignGuideC,\n        setCurrentDocId: setCurrentDocIdC,\n        temperature: temperatureC,\n        maxTokens: maxTokensC,\n        topP: topPC\n      };\n    }\n\n    if (!states.apiKey) {\n      states.setDesignGuide(\"Please provide OpenAI API Key\");\n      return;\n    }\n\n    states.setLoading(true);\n    \n    try {\n      const profileText = states.userProfiles\n        .map(p => `${p.dimension}: ${p.content}`)\n        .join(\"\\n\");\n      \n      let fullPrompt;\n      \n      if (group === \"C\") {\n        // For Group C, create a digital clone simulation prompt\n        fullPrompt = `You are creating a design guide for a digital clone of user \"${userIdC}\". \n        \nDesigner Goal: ${states.designerGoal}\n\nUser Profile:\n${profileText}\n\nCustom Prompt: ${states.customPrompt}\n\nBased on this user profile, generate a comprehensive design guide that would be most suitable for this specific user.`;\n      } else {\n        fullPrompt = `Designer Goal: ${states.designerGoal}\\nUser Profiles:\\n${profileText}\\nCustom Prompt: ${states.customPrompt}`;\n      }\n\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${states.apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{ role: \"system\", content: fullPrompt }],\n          temperature: states.temperature,\n          max_tokens: states.maxTokens,\n          top_p: states.topP\n        })\n      });\n\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      \n      const data = await response.json();\n      const result = data.choices[0]?.message?.content || \"Generation failed\";\n\n      states.setDesignGuide(result);\n      \n      // Store data in Firebase with different structures for different groups\n      const docData = {\n        designerGoal: states.designerGoal,\n        userProfiles: states.userProfiles,\n        customPrompt: states.customPrompt,\n        prompt: fullPrompt,\n        result: result,\n        timestamp: new Date(),\n        temperature: states.temperature,\n        maxTokens: states.maxTokens,\n        topP: states.topP\n      };\n      \n      // Group specific additional fields\n      if (group === \"A\") {\n        docData.designerNotes = designerNotes;\n      } else if (group === \"B\") {\n        docData.userFeedback = \"\";\n        docData.suggestedDimensions = \"\";\n      } else if (group === \"C\") {\n        docData.userId = userIdC;\n        docData.userEvaluation = \"\";\n      }\n\n      const collectionRef = collection(db, `group${group}`);\n      const docRef = await addDoc(collectionRef, docData);\n      states.setCurrentDocId(docRef.id);\n      \n    } catch (error) {\n      console.error(\"API Error:\", error);\n      states.setDesignGuide(`Error: ${error.message}`);\n    } finally {\n      states.setLoading(false);\n    }\n  };\n\n  // Generate suggested dimensions\n  const generateSuggestedDimensions = async () => {\n    if (!userFeedback.trim() || !apiKeyB) {\n      setSuggestedDimensions(\"Please provide feedback and API key\");\n      return;\n    }\n\n    if (!currentDocIdB) {\n      setSuggestedDimensions(\"No design guide generated yet. Please generate a design guide first.\");\n      return;\n    }\n\n    setLoadingB(true);\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKeyB}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: `Based on this user feedback: \"${userFeedback}\"\\n\\nExtract or suggest SHORT dimension phrases (like \"Environmental Attitude\", \"Price Sensitivity\", \"Technology Acceptance\") that could be used as user profile dimensions. Return ONLY the dimension phrases, one per line, with no explanations, numbering, or additional text.`\n          }],\n          temperature: temperatureB,\n          max_tokens: maxTokensB,\n          top_p: topPB\n        })\n      });\n\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      \n      const data = await response.json();\n      const dimensions = data.choices[0]?.message?.content || \"Generation failed\";\n      \n      setSuggestedDimensions(dimensions);\n      \n      // Update the existing group B document instead of creating a new one\n      const docRef = doc(db, \"groupB\", currentDocIdB);\n      await updateDoc(docRef, {\n        userFeedback: userFeedback,\n        suggestedDimensions: dimensions,\n        feedbackTimestamp: new Date()\n      });\n    } catch (error) {\n      console.error(\"Generation failed:\", error);\n      setSuggestedDimensions(`Error: ${error.message}`);\n    } finally {\n      setLoadingB(false);\n    }\n  };\n\n  // UI Components\n  const renderGroupA = () => (\n    <>\n      <div className=\"left-section\">\n        <h2>Designer Goal</h2>\n        <textarea\n          placeholder=\"Enter AI designer goal...\"\n          value={designerGoalA}\n          onChange={(e) => setDesignerGoalA(e.target.value)}\n        />\n        <h2>User Dimensions</h2>\n        {userProfilesA.map((profile, index) => (\n          <div key={index} className=\"user-profile-container\">\n            <input\n              className=\"user-dimension\"\n              value={profile.dimension}\n              onChange={(e) => updateUserProfile(\"A\", index, \"dimension\", e.target.value)}\n              placeholder=\"Dimension name\"\n            />\n            <textarea\n              className=\"user-content\"\n              value={profile.content}\n              onChange={(e) => updateUserProfile(\"A\", index, \"content\", e.target.value)}\n              placeholder=\"Dimension content...\"\n            />\n          </div>\n        ))}\n        <button className=\"small-button\" onClick={() => addUserProfile(\"A\")}>\n          Add Dimension\n        </button>\n        <h2>Custom Prompt</h2>\n        <textarea\n          placeholder=\"Enter custom prompt...\"\n          value={customPromptA}\n          onChange={(e) => setCustomPromptA(e.target.value)}\n        />\n        <h2>OpenAI API Key</h2>\n        <input\n          type=\"password\"\n          placeholder=\"Enter API key...\"\n          value={apiKeyA}\n          onChange={(e) => setApiKeyA(e.target.value)}\n        />\n        \n        <h2>Model Parameters</h2>\n        <div className=\"model-params\">\n          <div className=\"param-group\">\n            <label>Temperature: {temperatureA}</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={temperatureA}\n              onChange={(e) => setTemperatureA(parseFloat(e.target.value))}\n            />\n          </div>\n          \n          <div className=\"param-group\">\n            <label>Max Tokens: {maxTokensA}</label>\n            <input\n              type=\"range\"\n              min=\"500\"\n              max=\"8000\"\n              step=\"500\"\n              value={maxTokensA}\n              onChange={(e) => setMaxTokensA(parseInt(e.target.value))}\n            />\n          </div>\n          \n          <div className=\"param-group\">\n            <label>Top P: {topPA}</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={topPA}\n              onChange={(e) => setTopPA(parseFloat(e.target.value))}\n            />\n          </div>\n        </div>\n        \n        <button \n          className=\"full-width generate-button\"\n          onClick={() => generateDesignGuide(\"A\")}\n          disabled={loadingA}\n        >\n          {loadingA ? \"Generating...\" : \"Generate Design Guide\"}\n        </button>\n      </div>\n\n      <div className=\"right-section expanded\">\n        <h2 className=\"guide-header\">\n          Design Guide\n          <button \n            className=\"copy-button\" \n            onClick={() => copyToClipboard(designGuideA)}\n          >\n            Copy\n          </button>\n        </h2>\n        <textarea \n          className=\"design-guide-box\"\n          readOnly\n          value={designGuideA}\n          placeholder=\"Generated content will appear here...\"\n        />\n\n        <h2 className=\"notes-header\">\n          Expert Notes\n          <button \n            className=\"copy-button\" \n            onClick={saveDesignerNotes}\n          >\n            Save\n          </button>\n        </h2>\n        <textarea\n          className=\"notes-box\"\n          placeholder=\"Enter expert notes...\"\n          value={designerNotes}\n          onChange={(e) => setDesignerNotes(e.target.value)}\n        />\n      </div>\n    </>\n  );\n\n  const renderGroupB = () => (\n    <>\n      <div className=\"left-section\">\n        <h2>Designer Goal</h2>\n        <textarea\n          placeholder=\"Enter AI designer goal...\"\n          value={designerGoalB}\n          onChange={(e) => setDesignerGoalB(e.target.value)}\n        />\n        <h2>User Dimensions</h2>\n        {userProfilesB.map((profile, index) => (\n          <div key={index} className=\"user-profile-container\">\n            <input\n              className=\"user-dimension\"\n              value={profile.dimension}\n              onChange={(e) => updateUserProfile(\"B\", index, \"dimension\", e.target.value)}\n              placeholder=\"Dimension name\"\n            />\n            <textarea\n              className=\"user-content\"\n              value={profile.content}\n              onChange={(e) => updateUserProfile(\"B\", index, \"content\", e.target.value)}\n              placeholder=\"Dimension content...\"\n            />\n          </div>\n        ))}\n        <button className=\"small-button\" onClick={() => addUserProfile(\"B\")}>\n          Add Dimension\n        </button>\n        <h2>Custom Prompt</h2>\n        <textarea\n          placeholder=\"Enter custom prompt...\"\n          value={customPromptB}\n          onChange={(e) => setCustomPromptB(e.target.value)}\n        />\n        <h2>OpenAI API Key</h2>\n        <input\n          type=\"password\"\n          placeholder=\"Enter API key...\"\n          value={apiKeyB}\n          onChange={(e) => setApiKeyB(e.target.value)}\n        />\n        \n        <h2>Model Parameters</h2>\n        <div className=\"model-params\">\n          <div className=\"param-group\">\n            <label>Temperature: {temperatureB}</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={temperatureB}\n              onChange={(e) => setTemperatureB(parseFloat(e.target.value))}\n            />\n          </div>\n          \n          <div className=\"param-group\">\n            <label>Max Tokens: {maxTokensB}</label>\n            <input\n              type=\"range\"\n              min=\"500\"\n              max=\"8000\"\n              step=\"500\"\n              value={maxTokensB}\n              onChange={(e) => setMaxTokensB(parseInt(e.target.value))}\n            />\n          </div>\n          \n          <div className=\"param-group\">\n            <label>Top P: {topPB}</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={topPB}\n              onChange={(e) => setTopPB(parseFloat(e.target.value))}\n            />\n          </div>\n        </div>\n        \n        <button \n          className=\"full-width generate-button\"\n          onClick={() => generateDesignGuide(\"B\")}\n          disabled={loadingB}\n        >\n          {loadingB ? \"Generating...\" : \"Generate Design Guide\"}\n        </button>\n      </div>\n\n      <div className=\"right-section expanded\">\n        <h2 className=\"guide-header\">\n          Design Guide\n          <button \n            className=\"copy-button\" \n            onClick={() => copyToClipboard(designGuideB)}\n          >\n            Copy\n          </button>\n        </h2>\n        <textarea \n          className=\"design-guide-box\"\n          readOnly\n          value={designGuideB}\n          placeholder=\"Generated content will appear here...\"\n        />\n\n        <div className=\"feedback-section\">\n          <h2 className=\"feedback-header\">User Feedback</h2>\n          <textarea\n            className=\"feedback-box\"\n            placeholder=\"Enter your feedback...\"\n            value={userFeedback}\n            onChange={(e) => setUserFeedback(e.target.value)}\n          />\n          <button \n            className=\"generate-dimensions-button\" \n            onClick={generateSuggestedDimensions}\n            disabled={loadingB}\n          >\n            {loadingB ? \"Generating...\" : \"Suggest New Dimensions\"}\n          </button>\n          \n          <h2 className=\"suggested-dimensions-header\">Suggested Dimensions</h2>\n          <textarea\n            className=\"suggested-dimensions-box\"\n            readOnly\n            value={suggestedDimensions}\n            placeholder=\"Short dimension phrases will appear here (one per line)...\"\n          />\n        </div>\n      </div>\n    </>\n  );\n  \n  const renderGroupC = () => (\n    <>\n      <div className=\"left-section\">\n        <h2>Digital Clone User ID</h2>\n        <input\n          placeholder=\"Enter user ID (e.g. B1, B2, B3, etc.)...\"\n          value={userIdC}\n          onChange={(e) => setUserIdC(e.target.value)}\n          className=\"full-width\"\n        />\n        \n        <h2>Designer Goal</h2>\n        <textarea\n          placeholder=\"Enter AI designer goal...\"\n          value={designerGoalC}\n          onChange={(e) => setDesignerGoalC(e.target.value)}\n        />\n        \n        <h2>User Dimensions</h2>\n        {userProfilesC.map((profile, index) => (\n          <div key={index} className=\"user-profile-container\">\n            <input\n              className=\"user-dimension\"\n              value={profile.dimension}\n              onChange={(e) => updateUserProfile(\"C\", index, \"dimension\", e.target.value)}\n              placeholder=\"Dimension name\"\n            />\n            <textarea\n              className=\"user-content\"\n              value={profile.content}\n              onChange={(e) => updateUserProfile(\"C\", index, \"content\", e.target.value)}\n              placeholder=\"Dimension content...\"\n            />\n          </div>\n        ))}\n        <button className=\"small-button\" onClick={() => addUserProfile(\"C\")}>\n          Add Dimension\n        </button>\n        \n        <h2>Custom Prompt</h2>\n        <textarea\n          placeholder=\"Enter custom prompt...\"\n          value={customPromptC}\n          onChange={(e) => setCustomPromptC(e.target.value)}\n        />\n        \n        <h2>OpenAI API Key</h2>\n        <input\n          type=\"password\"\n          placeholder=\"Enter API key...\"\n          value={apiKeyC}\n          onChange={(e) => setApiKeyC(e.target.value)}\n        />\n        \n        <h2>Model Parameters</h2>\n        <div className=\"model-params\">\n          <div className=\"param-group\">\n            <label>Temperature: {temperatureC}</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={temperatureC}\n              onChange={(e) => setTemperatureC(parseFloat(e.target.value))}\n            />\n          </div>\n          \n          <div className=\"param-group\">\n            <label>Max Tokens: {maxTokensC}</label>\n            <input\n              type=\"range\"\n              min=\"500\"\n              max=\"8000\"\n              step=\"500\"\n              value={maxTokensC}\n              onChange={(e) => setMaxTokensC(parseInt(e.target.value))}\n            />\n          </div>\n          \n          <div className=\"param-group\">\n            <label>Top P: {topPC}</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={topPC}\n              onChange={(e) => setTopPC(parseFloat(e.target.value))}\n            />\n          </div>\n        </div>\n        \n        <button \n          className=\"full-width generate-button\"\n          onClick={() => generateDesignGuide(\"C\")}\n          disabled={loadingC}\n        >\n          {loadingC ? \"Generating...\" : \"Generate Digital Clone Design Guide\"}\n        </button>\n      </div>\n\n      <div className=\"right-section expanded\">\n        <h2 className=\"guide-header\">\n          Design Guide for Digital Clone {userIdC || \"User\"}\n          <button \n            className=\"copy-button\" \n            onClick={() => copyToClipboard(designGuideC)}\n          >\n            Copy\n          </button>\n        </h2>\n        <textarea \n          className=\"design-guide-box\"\n          readOnly\n          value={designGuideC}\n          placeholder=\"Generated design guide for digital clone will appear here...\"\n        />\n\n        <h2 className=\"evaluation-header\">\n          Real User Evaluation\n          <button \n            className=\"copy-button\" \n            onClick={saveUserEvaluation}\n          >\n            Save\n          </button>\n        </h2>\n        <textarea\n          className=\"notes-box\"\n          placeholder=\"Enter real user's evaluation of this digital clone's design guide...\"\n          value={userEvaluation}\n          onChange={(e) => setUserEvaluation(e.target.value)}\n        />\n      </div>\n    </>\n  );\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"page-title\">Human-AI Collaborative Method for Future-Oriented Design Prompt System</h1>\n      \n      <div className=\"layout-container\">\n        <div className=\"group-selector\">\n          <button \n            className={`group-button ${activeGroup === \"A\" ? \"active\" : \"\"}`} \n            onClick={() => setActiveGroup(\"A\")}\n          >\n            Group A (with Design Expert)\n          </button>\n          <button \n            className={`group-button ${activeGroup === \"B\" ? \"active\" : \"\"}`} \n            onClick={() => setActiveGroup(\"B\")}\n          >\n            Group B (without Design Expert)\n          </button>\n          <button \n            className={`group-button ${activeGroup === \"C\" ? \"active\" : \"\"}`} \n            onClick={() => setActiveGroup(\"C\")}\n          >\n            Group C (Silicon Sample)\n          </button>\n        </div>\n        \n        <div className=\"container\">\n          {activeGroup === \"A\" \n            ? renderGroupA() \n            : activeGroup === \"B\" \n              ? renderGroupB() \n              : renderGroupC()\n          }\n        </div>\n      </div>\n\n      <style>\n        {`\n          /* ✅ 解决背景白色问题 */\n          html, body {\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            font-family: Arial, sans-serif;\n            background: #121212;\n            color: #ffffff;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n\n          .page-title {\n            text-align: center;\n            font-size: 18px;\n            margin-top: 10px;\n            color: #bb86fc;\n          }\n\n          .layout-container {\n            display: flex;\n            flex-direction: column;\n            width: 95vw;\n            height: 95vh;\n          }\n\n          .group-selector {\n            display: flex;\n            justify-content: flex-start;\n            margin-bottom: 10px;\n          }\n\n          .group-button {\n            background: #333;\n            color: white;\n            border: none;\n            border-radius: 5px 5px 0 0;\n            cursor: pointer;\n            padding: 10px 15px;\n            margin-right: 5px;\n          }\n\n          .group-button.active {\n            background: #bb86fc;\n          }\n\n          .container {\n            display: flex;\n            flex: 1;\n            background: #1e1e1e;\n            border-radius: 10px;\n            overflow: hidden;\n          }\n\n          .left-section, .right-section.expanded {\n            width: 50%;\n            display: flex;\n            flex-direction: column;\n            padding: 20px;\n            overflow-y: auto;\n          }\n\n          .user-profile-container {\n            display: flex;\n            flex-direction: row;\n            gap: 20px;\n            margin-bottom: 12px;\n          }\n\n          .user-dimension {\n            width: 40%;\n          }\n\n          .user-content {\n            width: 60%;\n          }\n\n          .generate-button, .small-button, .copy-button, .generate-dimensions-button {\n            background: #bb86fc; \n            color: white;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            padding: 8px 12px;\n            margin-bottom: 15px;\n          }\n\n          .generate-button:disabled, .generate-dimensions-button:disabled {\n            background: #666;\n            cursor: not-allowed;\n          }\n\n          .small-button {\n            width: 40%;\n          }\n\n          .copy-button {\n            font-size: 14px;\n            padding: 5px 10px;\n            background: #bb86fc;\n          }\n\n          .design-guide-box {\n            flex-grow: 1;\n            min-height: 300px;\n            margin-bottom: 15px;\n          }\n\n          .notes-box, .feedback-box, .suggested-dimensions-box {\n            min-height: 80px;\n            margin-bottom: 15px;\n          }\n\n          .feedback-section {\n            display: flex;\n            flex-direction: column;\n          }\n\n          h2 {\n            color: #bb86fc;\n            margin-bottom: 10px;\n          }\n\n          textarea, input {\n            padding: 8px;\n            border: none;\n            border-radius: 5px;\n            background: #333;\n            color: #fff;\n            margin-bottom: 10px;\n          }\n\n          input:focus, textarea:focus {\n            outline: 1px solid #bb86fc;\n          }\n\n          .full-width {\n            width: 100%;\n          }\n          \n          .model-params {\n            margin-bottom: 15px;\n          }\n          \n          .param-group {\n            margin-bottom: 10px;\n          }\n          \n          .param-group label {\n            display: block;\n            margin-bottom: 5px;\n            color: #bb86fc;\n          }\n          \n          .param-group input[type=\"range\"] {\n            width: 100%;\n            background: #333;\n          }\n          \n          .param-group input[type=\"range\"]::-webkit-slider-thumb {\n            background: #bb86fc;\n          }\n        `}\n      </style>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}