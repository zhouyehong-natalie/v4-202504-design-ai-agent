{"ast":null,"code":"var _jsxFileName = \"/Users/zhouyehong-natalie/Desktop/2025.02 LLM \\u8F85\\u52A9Future-Oriented Design\\u8BBE\\u8BA1/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { db, collection, addDoc, doc, updateDoc } from \"./firebase\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentGroup, setCurrentGroup] = useState(\"A\"); // \"A\" or \"B\"\n  const [designerGoal, setDesignerGoal] = useState(\"\");\n  const [userProfiles, setUserProfiles] = useState([{\n    dimension: \"User ID\",\n    content: \"\"\n  }, {\n    dimension: \"Age\",\n    content: \"\"\n  }, {\n    dimension: \"Gender\",\n    content: \"\"\n  }, {\n    dimension: \"TAM Group\",\n    content: \"\"\n  }, {\n    dimension: \"Commuting Situation\",\n    content: \"\"\n  }]);\n  const [customPrompt, setCustomPrompt] = useState(\"\");\n  const [apiKey, setApiKey] = useState(\"\");\n  const [designGuide, setDesignGuide] = useState(\"\");\n  const [expertNotes, setExpertNotes] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\");\n  const [generatedDimension, setGeneratedDimension] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [lastDocId, setLastDocId] = useState(null);\n  const addUserProfile = () => {\n    setUserProfiles([...userProfiles, {\n      dimension: \"\",\n      content: \"\"\n    }]);\n  };\n  const updateUserProfile = (index, field, value) => {\n    const updatedProfiles = [...userProfiles];\n    updatedProfiles[index][field] = value;\n    setUserProfiles(updatedProfiles);\n  };\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(designGuide);\n  };\n  const callGPT4oAPI = async () => {\n    if (!apiKey) {\n      setDesignGuide(\"Please provide OpenAI API Key.\");\n      return;\n    }\n    setLoading(true);\n    const userProfileText = userProfiles.map((profile, index) => `Dimension ${index + 1}: ${profile.dimension}\\nContent: ${profile.content}`).join(\"\\n\\n\");\n    const fullPrompt = `AI Designer Goal: ${designerGoal}\\n\\nUser Profiles:\\n${userProfileText}\\n\\nCustom Prompt:\\n${customPrompt}\\n\\nPlease generate a design guide based on the above information.`;\n    try {\n      var _data$choices$, _data$choices$$messag, _data$choices$2, _data$choices$2$messa;\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: fullPrompt\n          }],\n          max_tokens: 2000\n        })\n      });\n      const data = await response.json();\n      setDesignGuide(((_data$choices$ = data.choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || \"Generation failed.\");\n      const docRef = await addDoc(collection(db, \"gpt_interactions\"), {\n        timestamp: new Date().toISOString(),\n        input: fullPrompt,\n        output: (_data$choices$2 = data.choices[0]) === null || _data$choices$2 === void 0 ? void 0 : (_data$choices$2$messa = _data$choices$2.message) === null || _data$choices$2$messa === void 0 ? void 0 : _data$choices$2$messa.content,\n        notes: \"\"\n      });\n      setLastDocId(docRef.id);\n    } catch (error) {\n      console.error(\"❌ API Request Error:\", error);\n      setDesignGuide(\"API request failed, please check network or API Key.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const generateNewDimension = async () => {\n    if (!apiKey || !userFeedback) {\n      setGeneratedDimension(\"Please provide feedback first.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      var _data$choices$3, _data$choices$3$messa;\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: `User feedback: ${userFeedback}. What additional dimension should be considered?`\n          }],\n          max_tokens: 500\n        })\n      });\n      const data = await response.json();\n      setGeneratedDimension(((_data$choices$3 = data.choices[0]) === null || _data$choices$3 === void 0 ? void 0 : (_data$choices$3$messa = _data$choices$3.message) === null || _data$choices$3$messa === void 0 ? void 0 : _data$choices$3$messa.content) || \"Failed to generate.\");\n    } catch (error) {\n      console.error(\"❌ API Request Error:\", error);\n      setGeneratedDimension(\"Failed to generate dimension.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentGroup(\"A\"),\n        className: currentGroup === \"A\" ? \"active\" : \"\",\n        children: \"Group A (With Expert Designers)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentGroup(\"B\"),\n        className: currentGroup === \"B\" ? \"active\" : \"\",\n        children: \"Group B (Without Expert Designers)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Designer Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter AI designer goal definition...\",\n          value: designerGoal,\n          onChange: e => setDesignerGoal(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Profile (Multiple Dimensions)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), userProfiles.map((profile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"user-dimension\",\n            value: profile.dimension,\n            onChange: e => updateUserProfile(index, \"dimension\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"user-content\",\n            value: profile.content,\n            onChange: e => updateUserProfile(index, \"content\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"small-button\",\n          onClick: addUserProfile,\n          children: \"Add Dimension\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"full-width generate-button\",\n          onClick: callGPT4oAPI,\n          disabled: loading,\n          children: loading ? \"Generating...\" : \"Generate Design Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section expanded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Design Guide \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"copy-button\",\n            onClick: copyToClipboard,\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"design-guide-box\",\n          readOnly: true,\n          value: designGuide\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), currentGroup === \"A\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Expert Designer Notes \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"copy-button\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"notes-box\",\n            value: expertNotes,\n            onChange: e => setExpertNotes(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"User Feedback \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"copy-button\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"notes-box\",\n            value: userFeedback,\n            onChange: e => setUserFeedback(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"AI-Generated Additional Dimension \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"copy-button\",\n              onClick: generateNewDimension,\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"notes-box\",\n            readOnly: true,\n            value: generatedDimension\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8T49TviosLHuATjSa1RYs5cRR4M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","db","collection","addDoc","doc","updateDoc","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentGroup","setCurrentGroup","designerGoal","setDesignerGoal","userProfiles","setUserProfiles","dimension","content","customPrompt","setCustomPrompt","apiKey","setApiKey","designGuide","setDesignGuide","expertNotes","setExpertNotes","userFeedback","setUserFeedback","generatedDimension","setGeneratedDimension","loading","setLoading","lastDocId","setLastDocId","addUserProfile","updateUserProfile","index","field","value","updatedProfiles","copyToClipboard","navigator","clipboard","writeText","callGPT4oAPI","userProfileText","map","profile","join","fullPrompt","_data$choices$","_data$choices$$messag","_data$choices$2","_data$choices$2$messa","response","fetch","method","headers","body","JSON","stringify","model","messages","role","max_tokens","data","json","choices","message","docRef","timestamp","Date","toISOString","input","output","notes","id","error","console","generateNewDimension","_data$choices$3","_data$choices$3$messa","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","disabled","readOnly","_c","$RefreshReg$"],"sources":["/Users/zhouyehong-natalie/Desktop/2025.02 LLM 辅助Future-Oriented Design设计/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { db, collection, addDoc, doc, updateDoc } from \"./firebase\";\n\nfunction App() {\n  const [currentGroup, setCurrentGroup] = useState(\"A\"); // \"A\" or \"B\"\n  const [designerGoal, setDesignerGoal] = useState(\"\");\n  const [userProfiles, setUserProfiles] = useState([\n    { dimension: \"User ID\", content: \"\" },\n    { dimension: \"Age\", content: \"\" },\n    { dimension: \"Gender\", content: \"\" },\n    { dimension: \"TAM Group\", content: \"\" },\n    { dimension: \"Commuting Situation\", content: \"\" }\n  ]);\n  const [customPrompt, setCustomPrompt] = useState(\"\");\n  const [apiKey, setApiKey] = useState(\"\");\n  const [designGuide, setDesignGuide] = useState(\"\");\n  const [expertNotes, setExpertNotes] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\");\n  const [generatedDimension, setGeneratedDimension] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [lastDocId, setLastDocId] = useState(null);\n\n  const addUserProfile = () => {\n    setUserProfiles([...userProfiles, { dimension: \"\", content: \"\" }]);\n  };\n\n  const updateUserProfile = (index, field, value) => {\n    const updatedProfiles = [...userProfiles];\n    updatedProfiles[index][field] = value;\n    setUserProfiles(updatedProfiles);\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(designGuide);\n  };\n\n  const callGPT4oAPI = async () => {\n    if (!apiKey) {\n      setDesignGuide(\"Please provide OpenAI API Key.\");\n      return;\n    }\n\n    setLoading(true);\n    const userProfileText = userProfiles\n      .map((profile, index) => `Dimension ${index + 1}: ${profile.dimension}\\nContent: ${profile.content}`)\n      .join(\"\\n\\n\");\n\n    const fullPrompt = `AI Designer Goal: ${designerGoal}\\n\\nUser Profiles:\\n${userProfileText}\\n\\nCustom Prompt:\\n${customPrompt}\\n\\nPlease generate a design guide based on the above information.`;\n\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{ role: \"system\", content: fullPrompt }],\n          max_tokens: 2000\n        })\n      });\n\n      const data = await response.json();\n      setDesignGuide(data.choices[0]?.message?.content || \"Generation failed.\");\n\n      const docRef = await addDoc(collection(db, \"gpt_interactions\"), {\n        timestamp: new Date().toISOString(),\n        input: fullPrompt,\n        output: data.choices[0]?.message?.content,\n        notes: \"\"\n      });\n\n      setLastDocId(docRef.id);\n    } catch (error) {\n      console.error(\"❌ API Request Error:\", error);\n      setDesignGuide(\"API request failed, please check network or API Key.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateNewDimension = async () => {\n    if (!apiKey || !userFeedback) {\n      setGeneratedDimension(\"Please provide feedback first.\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{ role: \"system\", content: `User feedback: ${userFeedback}. What additional dimension should be considered?` }],\n          max_tokens: 500\n        })\n      });\n\n      const data = await response.json();\n      setGeneratedDimension(data.choices[0]?.message?.content || \"Failed to generate.\");\n\n    } catch (error) {\n      console.error(\"❌ API Request Error:\", error);\n      setGeneratedDimension(\"Failed to generate dimension.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"sidebar\">\n        <button onClick={() => setCurrentGroup(\"A\")} className={currentGroup === \"A\" ? \"active\" : \"\"}>Group A (With Expert Designers)</button>\n        <button onClick={() => setCurrentGroup(\"B\")} className={currentGroup === \"B\" ? \"active\" : \"\"}>Group B (Without Expert Designers)</button>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"left-section\">\n          <h2>Designer Goal</h2>\n          <textarea placeholder=\"Enter AI designer goal definition...\" value={designerGoal} onChange={(e) => setDesignerGoal(e.target.value)} />\n          <h2>User Profile (Multiple Dimensions)</h2>\n          {userProfiles.map((profile, index) => (\n            <div key={index} className=\"user-profile-container\">\n              <input className=\"user-dimension\" value={profile.dimension} onChange={(e) => updateUserProfile(index, \"dimension\", e.target.value)} />\n              <textarea className=\"user-content\" value={profile.content} onChange={(e) => updateUserProfile(index, \"content\", e.target.value)} />\n            </div>\n          ))}\n          <button className=\"small-button\" onClick={addUserProfile}>Add Dimension</button>\n          <button className=\"full-width generate-button\" onClick={callGPT4oAPI} disabled={loading}>\n            {loading ? \"Generating...\" : \"Generate Design Guide\"}\n          </button>\n        </div>\n\n        <div className=\"right-section expanded\">\n          <h2>Design Guide <button className=\"copy-button\" onClick={copyToClipboard}>Copy</button></h2>\n          <textarea className=\"design-guide-box\" readOnly value={designGuide} />\n\n          {currentGroup === \"A\" ? (\n            <>\n              <h2>Expert Designer Notes <button className=\"copy-button\">Save</button></h2>\n              <textarea className=\"notes-box\" value={expertNotes} onChange={(e) => setExpertNotes(e.target.value)} />\n            </>\n          ) : (\n            <>\n              <h2>User Feedback <button className=\"copy-button\">Save</button></h2>\n              <textarea className=\"notes-box\" value={userFeedback} onChange={(e) => setUserFeedback(e.target.value)} />\n              <h2>AI-Generated Additional Dimension <button className=\"copy-button\" onClick={generateNewDimension}>Generate</button></h2>\n              <textarea className=\"notes-box\" readOnly value={generatedDimension} />\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}