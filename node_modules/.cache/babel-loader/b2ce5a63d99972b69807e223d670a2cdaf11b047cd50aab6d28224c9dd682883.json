{"ast":null,"code":"var _jsxFileName = \"/Users/zhouyehong-natalie/Desktop/2025.02 LLM \\u8F85\\u52A9Future-Oriented Design\\u8BBE\\u8BA1/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { db, collection, addDoc, updateDoc, doc } from \"./firebase\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State management\n  const [activeGroup, setActiveGroup] = useState(\"A\");\n\n  // Group A states\n  const [designerGoalA, setDesignerGoalA] = useState(\"\");\n  const [userProfilesA, setUserProfilesA] = useState([{\n    dimension: \"User ID\",\n    content: \"\"\n  }, {\n    dimension: \"Age\",\n    content: \"\"\n  }, {\n    dimension: \"Gender\",\n    content: \"\"\n  }, {\n    dimension: \"TAM Group\",\n    content: \"\"\n  }, {\n    dimension: \"Commuting Situation\",\n    content: \"\"\n  }]);\n  const [customPromptA, setCustomPromptA] = useState(\"\");\n  const [apiKeyA, setApiKeyA] = useState(\"\");\n  const [designGuideA, setDesignGuideA] = useState(\"\");\n  const [designerNotes, setDesignerNotes] = useState(\"\");\n  const [loadingA, setLoadingA] = useState(false);\n  const [currentDocIdA, setCurrentDocIdA] = useState(null);\n  const [savingNotes, setSavingNotes] = useState(false);\n\n  // GPT-4o parameters for Group A\n  const [temperatureA, setTemperatureA] = useState(0.7);\n  const [maxTokensA, setMaxTokensA] = useState(3000);\n  const [topPA, setTopPA] = useState(1.0);\n\n  // Group B states\n  const [designerGoalB, setDesignerGoalB] = useState(\"\");\n  const [userProfilesB, setUserProfilesB] = useState([{\n    dimension: \"User ID\",\n    content: \"\"\n  }, {\n    dimension: \"Age\",\n    content: \"\"\n  }, {\n    dimension: \"Gender\",\n    content: \"\"\n  }, {\n    dimension: \"TAM Group\",\n    content: \"\"\n  }, {\n    dimension: \"Commuting Situation\",\n    content: \"\"\n  }]);\n  const [customPromptB, setCustomPromptB] = useState(\"\");\n  const [apiKeyB, setApiKeyB] = useState(\"\");\n  const [designGuideB, setDesignGuideB] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\");\n  const [suggestedDimensions, setSuggestedDimensions] = useState(\"\");\n  const [loadingB, setLoadingB] = useState(false);\n  const [currentDocIdB, setCurrentDocIdB] = useState(null);\n\n  // GPT-4o parameters for Group B\n  const [temperatureB, setTemperatureB] = useState(0.7);\n  const [maxTokensB, setMaxTokensB] = useState(3000);\n  const [topPB, setTopPB] = useState(1.0);\n\n  // Group C states (Silicon Sample)\n  const [userIdC, setUserIdC] = useState(\"\");\n  const [userProfileC, setUserProfileC] = useState(\"\");\n  const [designerGoalC, setDesignerGoalC] = useState(\"\");\n  const [customPromptC, setCustomPromptC] = useState(\"\");\n  const [apiKeyC, setApiKeyC] = useState(\"\");\n  const [designGuideC, setDesignGuideC] = useState(\"\");\n  const [userEvaluation, setUserEvaluation] = useState(\"\");\n  const [loadingC, setLoadingC] = useState(false);\n  const [currentDocIdC, setCurrentDocIdC] = useState(null);\n  const [savingEvaluation, setSavingEvaluation] = useState(false);\n\n  // GPT-4o parameters for Group C\n  const [temperatureC, setTemperatureC] = useState(0.7);\n  const [maxTokensC, setMaxTokensC] = useState(3000);\n  const [topPC, setTopPC] = useState(1.0);\n\n  // Common functions\n  const addUserProfile = group => {\n    const newDimension = {\n      dimension: \"\",\n      content: \"\"\n    };\n    if (group === \"A\") {\n      setUserProfilesA([...userProfilesA, newDimension]);\n    } else if (group === \"B\") {\n      setUserProfilesB([...userProfilesB, newDimension]);\n    }\n  };\n  const updateUserProfile = (group, index, field, value) => {\n    if (group === \"A\") {\n      const profiles = [...userProfilesA];\n      profiles[index][field] = value;\n      setUserProfilesA(profiles);\n    } else if (group === \"B\") {\n      const profiles = [...userProfilesB];\n      profiles[index][field] = value;\n      setUserProfilesB(profiles);\n    }\n  };\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text);\n  };\n\n  // Save designer notes for Group A\n  const saveDesignerNotes = async () => {\n    if (!currentDocIdA || !designerNotes.trim()) return;\n    setSavingNotes(true);\n    try {\n      const docRef = doc(db, \"groupA\", currentDocIdA);\n      await updateDoc(docRef, {\n        designerNotes: designerNotes\n      });\n\n      // Show visual feedback that save was successful\n      setTimeout(() => {\n        setSavingNotes(false);\n      }, 1000);\n    } catch (error) {\n      console.error(\"Error saving notes:\", error);\n      setSavingNotes(false);\n    }\n  };\n\n  // Save user evaluation for Group C\n  const saveUserEvaluation = async () => {\n    if (!currentDocIdC || !userEvaluation.trim()) return;\n    setSavingEvaluation(true);\n    try {\n      const docRef = doc(db, \"groupC\", currentDocIdC);\n      await updateDoc(docRef, {\n        userEvaluation: userEvaluation,\n        evaluationTimestamp: new Date()\n      });\n\n      // Show visual feedback that save was successful\n      setTimeout(() => {\n        setSavingEvaluation(false);\n      }, 1000);\n    } catch (error) {\n      console.error(\"Error saving evaluation:\", error);\n      setSavingEvaluation(false);\n    }\n  };\n\n  // Design guide generation\n  const generateDesignGuide = async group => {\n    let states;\n    if (group === \"A\") {\n      states = {\n        apiKey: apiKeyA,\n        designerGoal: designerGoalA,\n        userProfiles: userProfilesA,\n        customPrompt: customPromptA,\n        setLoading: setLoadingA,\n        setDesignGuide: setDesignGuideA,\n        setCurrentDocId: setCurrentDocIdA,\n        temperature: temperatureA,\n        maxTokens: maxTokensA,\n        topP: topPA\n      };\n    } else if (group === \"B\") {\n      states = {\n        apiKey: apiKeyB,\n        designerGoal: designerGoalB,\n        userProfiles: userProfilesB,\n        customPrompt: customPromptB,\n        setLoading: setLoadingB,\n        setDesignGuide: setDesignGuideB,\n        setCurrentDocId: setCurrentDocIdB,\n        temperature: temperatureB,\n        maxTokens: maxTokensB,\n        topP: topPB\n      };\n    } else {\n      states = {\n        apiKey: apiKeyC,\n        designerGoal: designerGoalC,\n        userProfile: userProfileC,\n        customPrompt: customPromptC,\n        setLoading: setLoadingC,\n        setDesignGuide: setDesignGuideC,\n        setCurrentDocId: setCurrentDocIdC,\n        temperature: temperatureC,\n        maxTokens: maxTokensC,\n        topP: topPC\n      };\n    }\n    if (!states.apiKey) {\n      states.setDesignGuide(\"Please provide OpenAI API Key\");\n      return;\n    }\n    states.setLoading(true);\n    try {\n      var _data$choices$, _data$choices$$messag;\n      let profileText;\n      let fullPrompt;\n      if (group === \"C\") {\n        // For Group C, create a digital clone simulation prompt\n        fullPrompt = `You are creating a design guide for a digital clone of user \"${userIdC}\". \n        \nDesigner Goal: ${states.designerGoal}\n\nUser Profile:\n${states.userProfile}\n\nCustom Prompt: ${states.customPrompt}\n\nBased on this user profile, generate a comprehensive design guide that would be most suitable for this specific user.`;\n      } else {\n        profileText = states.userProfiles.map(p => `${p.dimension}: ${p.content}`).join(\"\\n\");\n        fullPrompt = `Designer Goal: ${states.designerGoal}\\nUser Profiles:\\n${profileText}\\nCustom Prompt: ${states.customPrompt}`;\n      }\n\n      // 添加调试信息\n      console.log(\"API Request:\", {\n        apiKey: states.apiKey ? states.apiKey.substring(0, 4) + \"...\" : \"not provided\",\n        // Only display first few characters to protect the API key\n        model: \"gpt-4o\",\n        temperature: states.temperature,\n        max_tokens: states.maxTokens,\n        group: group\n      });\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${states.apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: fullPrompt\n          }],\n          temperature: states.temperature,\n          max_tokens: states.maxTokens,\n          top_p: states.topP\n        })\n      });\n\n      // 添加细节错误信息处理\n      if (!response.ok) {\n        const errorText = await response.text().catch(e => \"Unable to get error details\");\n        console.error(\"API Error details:\", {\n          status: response.status,\n          statusText: response.statusText,\n          error: errorText\n        });\n        if (response.status === 401) {\n          throw new Error(`Authentication failed (401): Please check if your API key is correct and valid`);\n        } else {\n          throw new Error(`HTTP error! Status: ${response.status}, Message: ${response.statusText}`);\n        }\n      }\n      const data = await response.json();\n      const result = ((_data$choices$ = data.choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || \"Generation failed\";\n      states.setDesignGuide(result);\n\n      // Store data in Firebase with different structures for different groups\n      let docData;\n      if (group === \"A\") {\n        docData = {\n          designerGoal: states.designerGoal,\n          userProfiles: states.userProfiles,\n          customPrompt: states.customPrompt,\n          prompt: fullPrompt,\n          result: result,\n          timestamp: new Date(),\n          temperature: temperatureA,\n          maxTokens: maxTokensA,\n          topP: topPA,\n          designerNotes: designerNotes\n        };\n      } else if (group === \"B\") {\n        docData = {\n          designerGoal: states.designerGoal,\n          userProfiles: states.userProfiles,\n          customPrompt: states.customPrompt,\n          prompt: fullPrompt,\n          result: result,\n          timestamp: new Date(),\n          temperature: temperatureB,\n          maxTokens: maxTokensB,\n          topP: topPB,\n          userFeedback: \"\",\n          suggestedDimensions: \"\"\n        };\n      } else if (group === \"C\") {\n        docData = {\n          designerGoal: states.designerGoal,\n          userProfile: states.userProfile,\n          customPrompt: states.customPrompt,\n          prompt: fullPrompt,\n          result: result,\n          timestamp: new Date(),\n          temperature: temperatureC,\n          maxTokens: maxTokensC,\n          topP: topPC,\n          userId: userIdC,\n          userEvaluation: \"\"\n        };\n      }\n      const collectionRef = collection(db, `group${group}`);\n      const docRef = await addDoc(collectionRef, docData);\n      states.setCurrentDocId(docRef.id);\n    } catch (error) {\n      console.error(\"API Error:\", error);\n      states.setDesignGuide(`Error: ${error.message}`);\n    } finally {\n      states.setLoading(false);\n    }\n  };\n\n  // Generate suggested dimensions\n  const generateSuggestedDimensions = async () => {\n    if (!userFeedback.trim() || !apiKeyB) {\n      setSuggestedDimensions(\"Please provide feedback and API key\");\n      return;\n    }\n    if (!currentDocIdB) {\n      setSuggestedDimensions(\"No design guide generated yet. Please generate a design guide first.\");\n      return;\n    }\n    setLoadingB(true);\n    try {\n      var _data$choices$2, _data$choices$2$messa;\n      // 添加调试日志\n      console.log(\"Generate Suggested Dimensions - API Request:\", {\n        apiKey: apiKeyB ? apiKeyB.substring(0, 4) + \"...\" : \"not provided\",\n        feedback: userFeedback ? userFeedback.substring(0, 20) + \"...\" : \"empty\"\n      });\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKeyB}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: `Analyze the following user feedback and extract relevant user dimension phrases.\n\nUser Feedback: \"${userFeedback}\"\n\nExtract dimensions that the user actually mentions or cares about.\nIMPORTANT: For EACH dimension, you MUST include a brief clarification in parentheses.\n\nFormat EXACTLY like this:\nDimension Name (specific details to provide here)\nAnother Dimension (what user should enter here)\n\nExamples:\nColor Preference (preferred colors and combinations)\nWork Style (remote/office/hybrid preferences)\nSpace Requirements (square footage needed and layout preferences)\n\nEach dimension must:\n1. Be directly extracted from the user's feedback\n2. Be concise (2-3 words) for the dimension name\n3. Reflect actual aspects that the user is concerned about\n4. ALWAYS include parentheses with clear guidance on what information to provide\n\nReturn ONLY the formatted dimensions, one per line.`\n          }],\n          temperature: temperatureB,\n          max_tokens: maxTokensB,\n          top_p: topPB\n        })\n      });\n\n      // 添加细节错误信息处理\n      if (!response.ok) {\n        const errorText = await response.text().catch(e => \"Unable to get error details\");\n        console.error(\"Suggest Dimensions API Error details:\", {\n          status: response.status,\n          statusText: response.statusText,\n          error: errorText\n        });\n        if (response.status === 401) {\n          throw new Error(`Authentication failed (401): Please check if your API key is correct and valid`);\n        } else {\n          throw new Error(`HTTP error! Status: ${response.status}, Message: ${response.statusText}`);\n        }\n      }\n      const data = await response.json();\n      const dimensions = ((_data$choices$2 = data.choices[0]) === null || _data$choices$2 === void 0 ? void 0 : (_data$choices$2$messa = _data$choices$2.message) === null || _data$choices$2$messa === void 0 ? void 0 : _data$choices$2$messa.content) || \"Generation failed\";\n      setSuggestedDimensions(dimensions);\n\n      // Update the existing group B document instead of creating a new one\n      const docRef = doc(db, \"groupB\", currentDocIdB);\n      await updateDoc(docRef, {\n        userFeedback: userFeedback,\n        suggestedDimensions: dimensions,\n        feedbackTimestamp: new Date()\n      });\n    } catch (error) {\n      console.error(\"Generation failed:\", error);\n      setSuggestedDimensions(`Error: ${error.message}`);\n    } finally {\n      setLoadingB(false);\n    }\n  };\n\n  // UI Components\n  const renderGroupA = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Designer Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter AI designer goal...\",\n        value: designerGoalA,\n        onChange: e => setDesignerGoalA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Dimensions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), userProfilesA.map((profile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"user-dimension\",\n          value: profile.dimension,\n          onChange: e => updateUserProfile(\"A\", index, \"dimension\", e.target.value),\n          placeholder: \"Dimension name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"user-content\",\n          value: profile.content,\n          onChange: e => updateUserProfile(\"A\", index, \"content\", e.target.value),\n          placeholder: \"Dimension content...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => addUserProfile(\"A\"),\n        children: \"Add Dimension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Custom Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter custom prompt...\",\n        value: customPromptA,\n        onChange: e => setCustomPromptA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OpenAI API Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter API key...\",\n        value: apiKeyA,\n        onChange: e => setApiKeyA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"full-width generate-button\",\n        onClick: () => generateDesignGuide(\"A\"),\n        disabled: loadingA,\n        children: loadingA ? \"Generating...\" : \"Generate Design Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-section expanded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"guide-header\",\n        children: [\"Design Guide\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: () => copyToClipboard(designGuideA),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"design-guide-box\",\n        readOnly: true,\n        value: designGuideA,\n        placeholder: \"Generated content will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"notes-header\",\n        children: [\"Expert Notes\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `copy-button ${savingNotes ? 'saving' : ''}`,\n          onClick: saveDesignerNotes,\n          disabled: savingNotes,\n          children: savingNotes ? \"Saving...\" : \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"notes-box\",\n        placeholder: \"Enter expert notes...\",\n        value: designerNotes,\n        onChange: e => setDesignerNotes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const renderGroupB = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Designer Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter AI designer goal...\",\n        value: designerGoalB,\n        onChange: e => setDesignerGoalB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Dimensions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), userProfilesB.map((profile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"user-dimension\",\n          value: profile.dimension,\n          onChange: e => updateUserProfile(\"B\", index, \"dimension\", e.target.value),\n          placeholder: \"Dimension name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"user-content\",\n          value: profile.content,\n          onChange: e => updateUserProfile(\"B\", index, \"content\", e.target.value),\n          placeholder: \"Dimension content...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => addUserProfile(\"B\"),\n        children: \"Add Dimension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Custom Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter custom prompt...\",\n        value: customPromptB,\n        onChange: e => setCustomPromptB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OpenAI API Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter API key...\",\n        value: apiKeyB,\n        onChange: e => setApiKeyB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"full-width generate-button\",\n        onClick: () => generateDesignGuide(\"B\"),\n        disabled: loadingB,\n        children: loadingB ? \"Generating...\" : \"Generate Design Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-section expanded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"guide-header\",\n        children: [\"Design Guide\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: () => copyToClipboard(designGuideB),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"design-guide-box\",\n        readOnly: true,\n        value: designGuideB,\n        placeholder: \"Generated content will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"feedback-header\",\n          children: \"User Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"feedback-box\",\n          placeholder: \"Enter your feedback...\",\n          value: userFeedback,\n          onChange: e => setUserFeedback(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-dimensions-button\",\n          onClick: generateSuggestedDimensions,\n          disabled: loadingB,\n          children: loadingB ? \"Generating...\" : \"Suggest New Dimensions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"suggested-dimensions-header\",\n          children: \"Suggested Dimensions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"suggested-dimensions-box\",\n          readOnly: true,\n          value: suggestedDimensions,\n          placeholder: \"Short dimension phrases will appear here (one per line)...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const renderGroupC = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Digital Clone User ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter user ID (e.g. B1, B2, B3, etc.)...\",\n        value: userIdC,\n        onChange: e => setUserIdC(e.target.value),\n        className: \"full-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Designer Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter AI designer goal...\",\n        value: designerGoalC,\n        onChange: e => setDesignerGoalC(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"user-profile-box\",\n        placeholder: \"Enter complete user profile information...\",\n        value: userProfileC,\n        onChange: e => setUserProfileC(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Custom Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter custom prompt...\",\n        value: customPromptC,\n        onChange: e => setCustomPromptC(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OpenAI API Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter API key...\",\n        value: apiKeyC,\n        onChange: e => setApiKeyC(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"full-width generate-button\",\n        onClick: () => generateDesignGuide(\"C\"),\n        disabled: loadingC,\n        children: loadingC ? \"Generating...\" : \"Generate Digital Clone Design Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-section expanded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"guide-header\",\n        children: [\"Design Guide for Digital Clone \", userIdC || \"User\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: () => copyToClipboard(designGuideC),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"design-guide-box\",\n        readOnly: true,\n        value: designGuideC,\n        placeholder: \"Generated design guide for digital clone will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"evaluation-header\",\n        children: [\"Real User Evaluation\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `copy-button ${savingEvaluation ? 'saving' : ''}`,\n          onClick: saveUserEvaluation,\n          disabled: savingEvaluation,\n          children: savingEvaluation ? \"Saving...\" : \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"notes-box\",\n        placeholder: \"Enter real user's evaluation of this digital clone's design guide...\",\n        value: userEvaluation,\n        onChange: e => setUserEvaluation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"Human-AI Collaborative Method for Future-Oriented Design Prompt System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `group-button ${activeGroup === \"A\" ? \"active\" : \"\"}`,\n          onClick: () => setActiveGroup(\"A\"),\n          children: \"Group A (with Design Expert)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `group-button ${activeGroup === \"B\" ? \"active\" : \"\"}`,\n          onClick: () => setActiveGroup(\"B\"),\n          children: \"Group B (without Design Expert)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `group-button ${activeGroup === \"C\" ? \"active\" : \"\"}`,\n          onClick: () => setActiveGroup(\"C\"),\n          children: \"Group C (Silicon Sample)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: activeGroup === \"A\" ? renderGroupA() : activeGroup === \"B\" ? renderGroupB() : renderGroupC()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          /* ✅ 解决背景白色问题 */\n          html, body {\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            font-family: Arial, sans-serif;\n            background: #121212;\n            color: #ffffff;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n\n          .page-title {\n            text-align: center;\n            font-size: 18px;\n            margin-top: 10px;\n            color: #bb86fc;\n          }\n\n          .layout-container {\n            display: flex;\n            flex-direction: column;\n            width: 95vw;\n            height: 95vh;\n          }\n\n          .group-selector {\n            display: flex;\n            justify-content: flex-start;\n            margin-bottom: 10px;\n          }\n\n          .group-button {\n            background: #333;\n            color: white;\n            border: none;\n            border-radius: 5px 5px 0 0;\n            cursor: pointer;\n            padding: 10px 15px;\n            margin-right: 5px;\n          }\n\n          .group-button.active {\n            background: #bb86fc;\n          }\n\n          .container {\n            display: flex;\n            flex: 1;\n            background: #1e1e1e;\n            border-radius: 10px;\n            overflow: hidden;\n          }\n\n          .left-section, .right-section.expanded {\n            width: 50%;\n            display: flex;\n            flex-direction: column;\n            padding: 20px;\n            overflow-y: auto;\n          }\n\n          .user-profile-container {\n            display: flex;\n            flex-direction: row;\n            gap: 20px;\n            margin-bottom: 12px;\n          }\n\n          .user-dimension {\n            width: 40%;\n          }\n\n          .user-content {\n            width: 60%;\n          }\n\n          .generate-button, .small-button, .copy-button, .generate-dimensions-button {\n            background: #bb86fc; \n            color: white;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            padding: 8px 12px;\n            margin-bottom: 15px;\n          }\n\n          .generate-button:disabled, .generate-dimensions-button:disabled, .copy-button.saving {\n            background: #666;\n            cursor: not-allowed;\n          }\n          \n          .copy-button.saving:after {\n            content: '';\n            display: inline-block;\n            width: 8px;\n            height: 8px;\n            margin-left: 5px;\n            border-radius: 50%;\n            background-color: #fff;\n            animation: pulse 1s infinite;\n          }\n          \n          @keyframes pulse {\n            0% { opacity: 0.3; }\n            50% { opacity: 1; }\n            100% { opacity: 0.3; }\n          }\n\n          .small-button {\n            width: 40%;\n          }\n\n          .copy-button {\n            font-size: 14px;\n            padding: 5px 10px;\n            background: #bb86fc;\n          }\n\n          .design-guide-box {\n            flex-grow: 1;\n            min-height: 300px;\n            margin-bottom: 15px;\n          }\n\n          .notes-box, .feedback-box, .suggested-dimensions-box {\n            min-height: 80px;\n            margin-bottom: 15px;\n          }\n\n          .feedback-section {\n            display: flex;\n            flex-direction: column;\n          }\n\n          h2 {\n            color: #D71440;\n            margin-bottom: 10px;\n          }\n\n          textarea, input {\n            padding: 8px;\n            border: none;\n            border-radius: 5px;\n            background: #333;\n            color: #fff;\n            margin-bottom: 10px;\n          }\n\n          input:focus, textarea:focus {\n            outline: 1px solid #bb86fc;\n          }\n\n          .full-width {\n            width: 100%;\n          }\n          \n          .user-profile-box {\n            min-height: 150px;\n            margin-bottom: 15px;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 686,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aeGDT30585bLNmPfhjuRCbOoZU4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","db","collection","addDoc","updateDoc","doc","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","activeGroup","setActiveGroup","designerGoalA","setDesignerGoalA","userProfilesA","setUserProfilesA","dimension","content","customPromptA","setCustomPromptA","apiKeyA","setApiKeyA","designGuideA","setDesignGuideA","designerNotes","setDesignerNotes","loadingA","setLoadingA","currentDocIdA","setCurrentDocIdA","savingNotes","setSavingNotes","temperatureA","setTemperatureA","maxTokensA","setMaxTokensA","topPA","setTopPA","designerGoalB","setDesignerGoalB","userProfilesB","setUserProfilesB","customPromptB","setCustomPromptB","apiKeyB","setApiKeyB","designGuideB","setDesignGuideB","userFeedback","setUserFeedback","suggestedDimensions","setSuggestedDimensions","loadingB","setLoadingB","currentDocIdB","setCurrentDocIdB","temperatureB","setTemperatureB","maxTokensB","setMaxTokensB","topPB","setTopPB","userIdC","setUserIdC","userProfileC","setUserProfileC","designerGoalC","setDesignerGoalC","customPromptC","setCustomPromptC","apiKeyC","setApiKeyC","designGuideC","setDesignGuideC","userEvaluation","setUserEvaluation","loadingC","setLoadingC","currentDocIdC","setCurrentDocIdC","savingEvaluation","setSavingEvaluation","temperatureC","setTemperatureC","maxTokensC","setMaxTokensC","topPC","setTopPC","addUserProfile","group","newDimension","updateUserProfile","index","field","value","profiles","copyToClipboard","text","navigator","clipboard","writeText","saveDesignerNotes","trim","docRef","setTimeout","error","console","saveUserEvaluation","evaluationTimestamp","Date","generateDesignGuide","states","apiKey","designerGoal","userProfiles","customPrompt","setLoading","setDesignGuide","setCurrentDocId","temperature","maxTokens","topP","userProfile","_data$choices$","_data$choices$$messag","profileText","fullPrompt","map","p","join","log","substring","model","max_tokens","response","fetch","method","headers","body","JSON","stringify","messages","role","top_p","ok","errorText","catch","e","status","statusText","Error","data","json","result","choices","message","docData","prompt","timestamp","userId","collectionRef","id","generateSuggestedDimensions","_data$choices$2","_data$choices$2$messa","feedback","dimensions","feedbackTimestamp","renderGroupA","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","target","profile","onClick","type","disabled","readOnly","renderGroupB","renderGroupC","_c","$RefreshReg$"],"sources":["/Users/zhouyehong-natalie/Desktop/2025.02 LLM 辅助Future-Oriented Design设计/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { db, collection, addDoc, updateDoc, doc } from \"./firebase\";\n\nfunction App() {\n  // State management\n  const [activeGroup, setActiveGroup] = useState(\"A\");\n  \n  // Group A states\n  const [designerGoalA, setDesignerGoalA] = useState(\"\");\n  const [userProfilesA, setUserProfilesA] = useState([\n    { dimension: \"User ID\", content: \"\" },\n    { dimension: \"Age\", content: \"\" },\n    { dimension: \"Gender\", content: \"\" },\n    { dimension: \"TAM Group\", content: \"\" },\n    { dimension: \"Commuting Situation\", content: \"\" }\n  ]);\n  const [customPromptA, setCustomPromptA] = useState(\"\");\n  const [apiKeyA, setApiKeyA] = useState(\"\");\n  const [designGuideA, setDesignGuideA] = useState(\"\");\n  const [designerNotes, setDesignerNotes] = useState(\"\");\n  const [loadingA, setLoadingA] = useState(false);\n  const [currentDocIdA, setCurrentDocIdA] = useState(null);\n  const [savingNotes, setSavingNotes] = useState(false);\n  \n  // GPT-4o parameters for Group A\n  const [temperatureA, setTemperatureA] = useState(0.7);\n  const [maxTokensA, setMaxTokensA] = useState(3000);\n  const [topPA, setTopPA] = useState(1.0);\n\n  // Group B states\n  const [designerGoalB, setDesignerGoalB] = useState(\"\");\n  const [userProfilesB, setUserProfilesB] = useState([\n    { dimension: \"User ID\", content: \"\" },\n    { dimension: \"Age\", content: \"\" },\n    { dimension: \"Gender\", content: \"\" },\n    { dimension: \"TAM Group\", content: \"\" },\n    { dimension: \"Commuting Situation\", content: \"\" }\n  ]);\n  const [customPromptB, setCustomPromptB] = useState(\"\");\n  const [apiKeyB, setApiKeyB] = useState(\"\");\n  const [designGuideB, setDesignGuideB] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\");\n  const [suggestedDimensions, setSuggestedDimensions] = useState(\"\");\n  const [loadingB, setLoadingB] = useState(false);\n  const [currentDocIdB, setCurrentDocIdB] = useState(null);\n  \n  // GPT-4o parameters for Group B\n  const [temperatureB, setTemperatureB] = useState(0.7);\n  const [maxTokensB, setMaxTokensB] = useState(3000);\n  const [topPB, setTopPB] = useState(1.0);\n  \n  // Group C states (Silicon Sample)\n  const [userIdC, setUserIdC] = useState(\"\");\n  const [userProfileC, setUserProfileC] = useState(\"\");\n  const [designerGoalC, setDesignerGoalC] = useState(\"\");\n  const [customPromptC, setCustomPromptC] = useState(\"\");\n  const [apiKeyC, setApiKeyC] = useState(\"\");\n  const [designGuideC, setDesignGuideC] = useState(\"\");\n  const [userEvaluation, setUserEvaluation] = useState(\"\");\n  const [loadingC, setLoadingC] = useState(false);\n  const [currentDocIdC, setCurrentDocIdC] = useState(null);\n  const [savingEvaluation, setSavingEvaluation] = useState(false);\n  \n  // GPT-4o parameters for Group C\n  const [temperatureC, setTemperatureC] = useState(0.7);\n  const [maxTokensC, setMaxTokensC] = useState(3000);\n  const [topPC, setTopPC] = useState(1.0);\n\n  // Common functions\n  const addUserProfile = (group) => {\n    const newDimension = { dimension: \"\", content: \"\" };\n    if (group === \"A\") {\n      setUserProfilesA([...userProfilesA, newDimension]);\n    } else if (group === \"B\") {\n      setUserProfilesB([...userProfilesB, newDimension]);\n    }\n  };\n\n  const updateUserProfile = (group, index, field, value) => {\n    if (group === \"A\") {\n      const profiles = [...userProfilesA];\n      profiles[index][field] = value;\n      setUserProfilesA(profiles);\n    } else if (group === \"B\") {\n      const profiles = [...userProfilesB];\n      profiles[index][field] = value;\n      setUserProfilesB(profiles);\n    }\n  };\n\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  // Save designer notes for Group A\n  const saveDesignerNotes = async () => {\n    if (!currentDocIdA || !designerNotes.trim()) return;\n    \n    setSavingNotes(true);\n    \n    try {\n      const docRef = doc(db, \"groupA\", currentDocIdA);\n      await updateDoc(docRef, {\n        designerNotes: designerNotes\n      });\n      \n      // Show visual feedback that save was successful\n      setTimeout(() => {\n        setSavingNotes(false);\n      }, 1000);\n    } catch (error) {\n      console.error(\"Error saving notes:\", error);\n      setSavingNotes(false);\n    }\n  };\n  \n  // Save user evaluation for Group C\n  const saveUserEvaluation = async () => {\n    if (!currentDocIdC || !userEvaluation.trim()) return;\n    \n    setSavingEvaluation(true);\n    \n    try {\n      const docRef = doc(db, \"groupC\", currentDocIdC);\n      await updateDoc(docRef, {\n        userEvaluation: userEvaluation,\n        evaluationTimestamp: new Date()\n      });\n      \n      // Show visual feedback that save was successful\n      setTimeout(() => {\n        setSavingEvaluation(false);\n      }, 1000);\n    } catch (error) {\n      console.error(\"Error saving evaluation:\", error);\n      setSavingEvaluation(false);\n    }\n  };\n\n  // Design guide generation\n  const generateDesignGuide = async (group) => {\n    let states;\n    if (group === \"A\") {\n      states = {\n        apiKey: apiKeyA,\n        designerGoal: designerGoalA,\n        userProfiles: userProfilesA,\n        customPrompt: customPromptA,\n        setLoading: setLoadingA,\n        setDesignGuide: setDesignGuideA,\n        setCurrentDocId: setCurrentDocIdA,\n        temperature: temperatureA,\n        maxTokens: maxTokensA,\n        topP: topPA\n      };\n    } else if (group === \"B\") {\n      states = {\n        apiKey: apiKeyB,\n        designerGoal: designerGoalB,\n        userProfiles: userProfilesB,\n        customPrompt: customPromptB,\n        setLoading: setLoadingB,\n        setDesignGuide: setDesignGuideB,\n        setCurrentDocId: setCurrentDocIdB,\n        temperature: temperatureB,\n        maxTokens: maxTokensB,\n        topP: topPB\n      };\n    } else {\n      states = {\n        apiKey: apiKeyC,\n        designerGoal: designerGoalC,\n        userProfile: userProfileC,\n        customPrompt: customPromptC,\n        setLoading: setLoadingC,\n        setDesignGuide: setDesignGuideC,\n        setCurrentDocId: setCurrentDocIdC,\n        temperature: temperatureC,\n        maxTokens: maxTokensC,\n        topP: topPC\n      };\n    }\n\n    if (!states.apiKey) {\n      states.setDesignGuide(\"Please provide OpenAI API Key\");\n      return;\n    }\n\n    states.setLoading(true);\n    \n    try {\n      let profileText;\n      let fullPrompt;\n      \n      if (group === \"C\") {\n        // For Group C, create a digital clone simulation prompt\n        fullPrompt = `You are creating a design guide for a digital clone of user \"${userIdC}\". \n        \nDesigner Goal: ${states.designerGoal}\n\nUser Profile:\n${states.userProfile}\n\nCustom Prompt: ${states.customPrompt}\n\nBased on this user profile, generate a comprehensive design guide that would be most suitable for this specific user.`;\n      } else {\n        profileText = states.userProfiles\n          .map(p => `${p.dimension}: ${p.content}`)\n          .join(\"\\n\");\n        \n        fullPrompt = `Designer Goal: ${states.designerGoal}\\nUser Profiles:\\n${profileText}\\nCustom Prompt: ${states.customPrompt}`;\n      }\n\n      // 添加调试信息\n      console.log(\"API Request:\", {\n        apiKey: states.apiKey ? states.apiKey.substring(0, 4) + \"...\" : \"not provided\", // Only display first few characters to protect the API key\n        model: \"gpt-4o\",\n        temperature: states.temperature,\n        max_tokens: states.maxTokens,\n        group: group\n      });\n      \n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${states.apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{ role: \"system\", content: fullPrompt }],\n          temperature: states.temperature,\n          max_tokens: states.maxTokens,\n          top_p: states.topP\n        })\n      });\n\n      // 添加细节错误信息处理\n      if (!response.ok) {\n        const errorText = await response.text().catch(e => \"Unable to get error details\");\n        console.error(\"API Error details:\", {\n          status: response.status,\n          statusText: response.statusText,\n          error: errorText\n        });\n        \n        if (response.status === 401) {\n          throw new Error(`Authentication failed (401): Please check if your API key is correct and valid`);\n        } else {\n          throw new Error(`HTTP error! Status: ${response.status}, Message: ${response.statusText}`);\n        }\n      }\n      \n      const data = await response.json();\n      const result = data.choices[0]?.message?.content || \"Generation failed\";\n\n      states.setDesignGuide(result);\n      \n      // Store data in Firebase with different structures for different groups\n      let docData;\n      \n      if (group === \"A\") {\n        docData = {\n          designerGoal: states.designerGoal,\n          userProfiles: states.userProfiles,\n          customPrompt: states.customPrompt,\n          prompt: fullPrompt,\n          result: result,\n          timestamp: new Date(),\n          temperature: temperatureA,\n          maxTokens: maxTokensA,\n          topP: topPA,\n          designerNotes: designerNotes\n        };\n      } else if (group === \"B\") {\n        docData = {\n          designerGoal: states.designerGoal,\n          userProfiles: states.userProfiles,\n          customPrompt: states.customPrompt,\n          prompt: fullPrompt,\n          result: result,\n          timestamp: new Date(),\n          temperature: temperatureB,\n          maxTokens: maxTokensB,\n          topP: topPB,\n          userFeedback: \"\",\n          suggestedDimensions: \"\"\n        };\n      } else if (group === \"C\") {\n        docData = {\n          designerGoal: states.designerGoal,\n          userProfile: states.userProfile,\n          customPrompt: states.customPrompt,\n          prompt: fullPrompt,\n          result: result,\n          timestamp: new Date(),\n          temperature: temperatureC,\n          maxTokens: maxTokensC,\n          topP: topPC,\n          userId: userIdC,\n          userEvaluation: \"\"\n        };\n      }\n\n      const collectionRef = collection(db, `group${group}`);\n      const docRef = await addDoc(collectionRef, docData);\n      states.setCurrentDocId(docRef.id);\n      \n    } catch (error) {\n      console.error(\"API Error:\", error);\n      states.setDesignGuide(`Error: ${error.message}`);\n    } finally {\n      states.setLoading(false);\n    }\n  };\n\n  // Generate suggested dimensions\n  const generateSuggestedDimensions = async () => {\n    if (!userFeedback.trim() || !apiKeyB) {\n      setSuggestedDimensions(\"Please provide feedback and API key\");\n      return;\n    }\n\n    if (!currentDocIdB) {\n      setSuggestedDimensions(\"No design guide generated yet. Please generate a design guide first.\");\n      return;\n    }\n\n    setLoadingB(true);\n    try {\n      // 添加调试日志\n      console.log(\"Generate Suggested Dimensions - API Request:\", {\n        apiKey: apiKeyB ? apiKeyB.substring(0, 4) + \"...\" : \"not provided\",\n        feedback: userFeedback ? userFeedback.substring(0, 20) + \"...\" : \"empty\"\n      });\n      \n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKeyB}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: `Analyze the following user feedback and extract relevant user dimension phrases.\n\nUser Feedback: \"${userFeedback}\"\n\nExtract dimensions that the user actually mentions or cares about.\nIMPORTANT: For EACH dimension, you MUST include a brief clarification in parentheses.\n\nFormat EXACTLY like this:\nDimension Name (specific details to provide here)\nAnother Dimension (what user should enter here)\n\nExamples:\nColor Preference (preferred colors and combinations)\nWork Style (remote/office/hybrid preferences)\nSpace Requirements (square footage needed and layout preferences)\n\nEach dimension must:\n1. Be directly extracted from the user's feedback\n2. Be concise (2-3 words) for the dimension name\n3. Reflect actual aspects that the user is concerned about\n4. ALWAYS include parentheses with clear guidance on what information to provide\n\nReturn ONLY the formatted dimensions, one per line.`\n          }],\n          temperature: temperatureB,\n          max_tokens: maxTokensB,\n          top_p: topPB\n        })\n      });\n\n      // 添加细节错误信息处理\n      if (!response.ok) {\n        const errorText = await response.text().catch(e => \"Unable to get error details\");\n        console.error(\"Suggest Dimensions API Error details:\", {\n          status: response.status,\n          statusText: response.statusText,\n          error: errorText\n        });\n        \n        if (response.status === 401) {\n          throw new Error(`Authentication failed (401): Please check if your API key is correct and valid`);\n        } else {\n          throw new Error(`HTTP error! Status: ${response.status}, Message: ${response.statusText}`);\n        }\n      }\n      \n      const data = await response.json();\n      const dimensions = data.choices[0]?.message?.content || \"Generation failed\";\n      \n      setSuggestedDimensions(dimensions);\n      \n      // Update the existing group B document instead of creating a new one\n      const docRef = doc(db, \"groupB\", currentDocIdB);\n      await updateDoc(docRef, {\n        userFeedback: userFeedback,\n        suggestedDimensions: dimensions,\n        feedbackTimestamp: new Date()\n      });\n    } catch (error) {\n      console.error(\"Generation failed:\", error);\n      setSuggestedDimensions(`Error: ${error.message}`);\n    } finally {\n      setLoadingB(false);\n    }\n  };\n\n  // UI Components\n  const renderGroupA = () => (\n    <>\n      <div className=\"left-section\">\n        <h2>Designer Goal</h2>\n        <textarea\n          placeholder=\"Enter AI designer goal...\"\n          value={designerGoalA}\n          onChange={(e) => setDesignerGoalA(e.target.value)}\n        />\n        <h2>User Dimensions</h2>\n        {userProfilesA.map((profile, index) => (\n          <div key={index} className=\"user-profile-container\">\n            <input\n              className=\"user-dimension\"\n              value={profile.dimension}\n              onChange={(e) => updateUserProfile(\"A\", index, \"dimension\", e.target.value)}\n              placeholder=\"Dimension name\"\n            />\n            <textarea\n              className=\"user-content\"\n              value={profile.content}\n              onChange={(e) => updateUserProfile(\"A\", index, \"content\", e.target.value)}\n              placeholder=\"Dimension content...\"\n            />\n          </div>\n        ))}\n        <button className=\"small-button\" onClick={() => addUserProfile(\"A\")}>\n          Add Dimension\n        </button>\n        <h2>Custom Prompt</h2>\n        <textarea\n          placeholder=\"Enter custom prompt...\"\n          value={customPromptA}\n          onChange={(e) => setCustomPromptA(e.target.value)}\n        />\n        <h2>OpenAI API Key</h2>\n        <input\n          type=\"password\"\n          placeholder=\"Enter API key...\"\n          value={apiKeyA}\n          onChange={(e) => setApiKeyA(e.target.value)}\n        />\n        <button \n          className=\"full-width generate-button\"\n          onClick={() => generateDesignGuide(\"A\")}\n          disabled={loadingA}\n        >\n          {loadingA ? \"Generating...\" : \"Generate Design Guide\"}\n        </button>\n      </div>\n\n      <div className=\"right-section expanded\">\n        <h2 className=\"guide-header\">\n          Design Guide\n          <button \n            className=\"copy-button\" \n            onClick={() => copyToClipboard(designGuideA)}\n          >\n            Copy\n          </button>\n        </h2>\n        <textarea \n          className=\"design-guide-box\"\n          readOnly\n          value={designGuideA}\n          placeholder=\"Generated content will appear here...\"\n        />\n\n        <h2 className=\"notes-header\">\n          Expert Notes\n          <button \n            className={`copy-button ${savingNotes ? 'saving' : ''}`}\n            onClick={saveDesignerNotes}\n            disabled={savingNotes}\n          >\n            {savingNotes ? \"Saving...\" : \"Save\"}\n          </button>\n        </h2>\n        <textarea\n          className=\"notes-box\"\n          placeholder=\"Enter expert notes...\"\n          value={designerNotes}\n          onChange={(e) => setDesignerNotes(e.target.value)}\n        />\n      </div>\n    </>\n  );\n\n  const renderGroupB = () => (\n    <>\n      <div className=\"left-section\">\n        <h2>Designer Goal</h2>\n        <textarea\n          placeholder=\"Enter AI designer goal...\"\n          value={designerGoalB}\n          onChange={(e) => setDesignerGoalB(e.target.value)}\n        />\n        <h2>User Dimensions</h2>\n        {userProfilesB.map((profile, index) => (\n          <div key={index} className=\"user-profile-container\">\n            <input\n              className=\"user-dimension\"\n              value={profile.dimension}\n              onChange={(e) => updateUserProfile(\"B\", index, \"dimension\", e.target.value)}\n              placeholder=\"Dimension name\"\n            />\n            <textarea\n              className=\"user-content\"\n              value={profile.content}\n              onChange={(e) => updateUserProfile(\"B\", index, \"content\", e.target.value)}\n              placeholder=\"Dimension content...\"\n            />\n          </div>\n        ))}\n        <button className=\"small-button\" onClick={() => addUserProfile(\"B\")}>\n          Add Dimension\n        </button>\n        <h2>Custom Prompt</h2>\n        <textarea\n          placeholder=\"Enter custom prompt...\"\n          value={customPromptB}\n          onChange={(e) => setCustomPromptB(e.target.value)}\n        />\n        <h2>OpenAI API Key</h2>\n        <input\n          type=\"password\"\n          placeholder=\"Enter API key...\"\n          value={apiKeyB}\n          onChange={(e) => setApiKeyB(e.target.value)}\n        />\n        <button \n          className=\"full-width generate-button\"\n          onClick={() => generateDesignGuide(\"B\")}\n          disabled={loadingB}\n        >\n          {loadingB ? \"Generating...\" : \"Generate Design Guide\"}\n        </button>\n      </div>\n\n      <div className=\"right-section expanded\">\n        <h2 className=\"guide-header\">\n          Design Guide\n          <button \n            className=\"copy-button\" \n            onClick={() => copyToClipboard(designGuideB)}\n          >\n            Copy\n          </button>\n        </h2>\n        <textarea \n          className=\"design-guide-box\"\n          readOnly\n          value={designGuideB}\n          placeholder=\"Generated content will appear here...\"\n        />\n\n        <div className=\"feedback-section\">\n          <h2 className=\"feedback-header\">User Feedback</h2>\n          <textarea\n            className=\"feedback-box\"\n            placeholder=\"Enter your feedback...\"\n            value={userFeedback}\n            onChange={(e) => setUserFeedback(e.target.value)}\n          />\n          <button \n            className=\"generate-dimensions-button\" \n            onClick={generateSuggestedDimensions}\n            disabled={loadingB}\n          >\n            {loadingB ? \"Generating...\" : \"Suggest New Dimensions\"}\n          </button>\n          \n          <h2 className=\"suggested-dimensions-header\">Suggested Dimensions</h2>\n          <textarea\n            className=\"suggested-dimensions-box\"\n            readOnly\n            value={suggestedDimensions}\n            placeholder=\"Short dimension phrases will appear here (one per line)...\"\n          />\n        </div>\n      </div>\n    </>\n  );\n  \n  const renderGroupC = () => (\n    <>\n      <div className=\"left-section\">\n        <h2>Digital Clone User ID</h2>\n        <input\n          placeholder=\"Enter user ID (e.g. B1, B2, B3, etc.)...\"\n          value={userIdC}\n          onChange={(e) => setUserIdC(e.target.value)}\n          className=\"full-width\"\n        />\n        \n        <h2>Designer Goal</h2>\n        <textarea\n          placeholder=\"Enter AI designer goal...\"\n          value={designerGoalC}\n          onChange={(e) => setDesignerGoalC(e.target.value)}\n        />\n        \n        <h2>User Profile</h2>\n        <textarea\n          className=\"user-profile-box\"\n          placeholder=\"Enter complete user profile information...\"\n          value={userProfileC}\n          onChange={(e) => setUserProfileC(e.target.value)}\n        />\n        \n        <h2>Custom Prompt</h2>\n        <textarea\n          placeholder=\"Enter custom prompt...\"\n          value={customPromptC}\n          onChange={(e) => setCustomPromptC(e.target.value)}\n        />\n        \n        <h2>OpenAI API Key</h2>\n        <input\n          type=\"password\"\n          placeholder=\"Enter API key...\"\n          value={apiKeyC}\n          onChange={(e) => setApiKeyC(e.target.value)}\n        />\n        <button \n          className=\"full-width generate-button\"\n          onClick={() => generateDesignGuide(\"C\")}\n          disabled={loadingC}\n        >\n          {loadingC ? \"Generating...\" : \"Generate Digital Clone Design Guide\"}\n        </button>\n      </div>\n\n      <div className=\"right-section expanded\">\n        <h2 className=\"guide-header\">\n          Design Guide for Digital Clone {userIdC || \"User\"}\n          <button \n            className=\"copy-button\" \n            onClick={() => copyToClipboard(designGuideC)}\n          >\n            Copy\n          </button>\n        </h2>\n        <textarea \n          className=\"design-guide-box\"\n          readOnly\n          value={designGuideC}\n          placeholder=\"Generated design guide for digital clone will appear here...\"\n        />\n\n        <h2 className=\"evaluation-header\">\n          Real User Evaluation\n          <button \n            className={`copy-button ${savingEvaluation ? 'saving' : ''}`}\n            onClick={saveUserEvaluation}\n            disabled={savingEvaluation}\n          >\n            {savingEvaluation ? \"Saving...\" : \"Save\"}\n          </button>\n        </h2>\n        <textarea\n          className=\"notes-box\"\n          placeholder=\"Enter real user's evaluation of this digital clone's design guide...\"\n          value={userEvaluation}\n          onChange={(e) => setUserEvaluation(e.target.value)}\n        />\n      </div>\n    </>\n  );\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"page-title\">Human-AI Collaborative Method for Future-Oriented Design Prompt System</h1>\n      \n      <div className=\"layout-container\">\n        <div className=\"group-selector\">\n          <button \n            className={`group-button ${activeGroup === \"A\" ? \"active\" : \"\"}`} \n            onClick={() => setActiveGroup(\"A\")}\n          >\n            Group A (with Design Expert)\n          </button>\n          <button \n            className={`group-button ${activeGroup === \"B\" ? \"active\" : \"\"}`} \n            onClick={() => setActiveGroup(\"B\")}\n          >\n            Group B (without Design Expert)\n          </button>\n          <button \n            className={`group-button ${activeGroup === \"C\" ? \"active\" : \"\"}`} \n            onClick={() => setActiveGroup(\"C\")}\n          >\n            Group C (Silicon Sample)\n          </button>\n        </div>\n        \n        <div className=\"container\">\n          {activeGroup === \"A\" \n            ? renderGroupA() \n            : activeGroup === \"B\" \n              ? renderGroupB() \n              : renderGroupC()\n          }\n        </div>\n      </div>\n\n      <style>\n        {`\n          /* ✅ 解决背景白色问题 */\n          html, body {\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            font-family: Arial, sans-serif;\n            background: #121212;\n            color: #ffffff;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n\n          .page-title {\n            text-align: center;\n            font-size: 18px;\n            margin-top: 10px;\n            color: #bb86fc;\n          }\n\n          .layout-container {\n            display: flex;\n            flex-direction: column;\n            width: 95vw;\n            height: 95vh;\n          }\n\n          .group-selector {\n            display: flex;\n            justify-content: flex-start;\n            margin-bottom: 10px;\n          }\n\n          .group-button {\n            background: #333;\n            color: white;\n            border: none;\n            border-radius: 5px 5px 0 0;\n            cursor: pointer;\n            padding: 10px 15px;\n            margin-right: 5px;\n          }\n\n          .group-button.active {\n            background: #bb86fc;\n          }\n\n          .container {\n            display: flex;\n            flex: 1;\n            background: #1e1e1e;\n            border-radius: 10px;\n            overflow: hidden;\n          }\n\n          .left-section, .right-section.expanded {\n            width: 50%;\n            display: flex;\n            flex-direction: column;\n            padding: 20px;\n            overflow-y: auto;\n          }\n\n          .user-profile-container {\n            display: flex;\n            flex-direction: row;\n            gap: 20px;\n            margin-bottom: 12px;\n          }\n\n          .user-dimension {\n            width: 40%;\n          }\n\n          .user-content {\n            width: 60%;\n          }\n\n          .generate-button, .small-button, .copy-button, .generate-dimensions-button {\n            background: #bb86fc; \n            color: white;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            padding: 8px 12px;\n            margin-bottom: 15px;\n          }\n\n          .generate-button:disabled, .generate-dimensions-button:disabled, .copy-button.saving {\n            background: #666;\n            cursor: not-allowed;\n          }\n          \n          .copy-button.saving:after {\n            content: '';\n            display: inline-block;\n            width: 8px;\n            height: 8px;\n            margin-left: 5px;\n            border-radius: 50%;\n            background-color: #fff;\n            animation: pulse 1s infinite;\n          }\n          \n          @keyframes pulse {\n            0% { opacity: 0.3; }\n            50% { opacity: 1; }\n            100% { opacity: 0.3; }\n          }\n\n          .small-button {\n            width: 40%;\n          }\n\n          .copy-button {\n            font-size: 14px;\n            padding: 5px 10px;\n            background: #bb86fc;\n          }\n\n          .design-guide-box {\n            flex-grow: 1;\n            min-height: 300px;\n            margin-bottom: 15px;\n          }\n\n          .notes-box, .feedback-box, .suggested-dimensions-box {\n            min-height: 80px;\n            margin-bottom: 15px;\n          }\n\n          .feedback-section {\n            display: flex;\n            flex-direction: column;\n          }\n\n          h2 {\n            color: #D71440;\n            margin-bottom: 10px;\n          }\n\n          textarea, input {\n            padding: 8px;\n            border: none;\n            border-radius: 5px;\n            background: #333;\n            color: #fff;\n            margin-bottom: 10px;\n          }\n\n          input:focus, textarea:focus {\n            outline: 1px solid #bb86fc;\n          }\n\n          .full-width {\n            width: 100%;\n          }\n          \n          .user-profile-box {\n            min-height: 150px;\n            margin-bottom: 15px;\n          }\n        `}\n      </style>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}