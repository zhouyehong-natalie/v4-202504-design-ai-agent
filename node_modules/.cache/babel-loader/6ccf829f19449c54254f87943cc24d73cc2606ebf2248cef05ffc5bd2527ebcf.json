{"ast":null,"code":"var _jsxFileName = \"/Users/zhouyehong-natalie/Desktop/2025.02 LLM \\u8F85\\u52A9Future-Oriented Design\\u8BBE\\u8BA1/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { db, collection, addDoc, updateDoc, doc } from \"./firebase\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State management\n  const [activeGroup, setActiveGroup] = useState(\"A\");\n\n  // Group A states\n  const [designerGoalA, setDesignerGoalA] = useState(\"\");\n  const [userProfilesA, setUserProfilesA] = useState([{\n    dimension: \"User ID\",\n    content: \"\"\n  }, {\n    dimension: \"Age\",\n    content: \"\"\n  }, {\n    dimension: \"Gender\",\n    content: \"\"\n  }, {\n    dimension: \"TAM Group\",\n    content: \"\"\n  }, {\n    dimension: \"Commuting Situation\",\n    content: \"\"\n  }]);\n  const [customPromptA, setCustomPromptA] = useState(\"\");\n  const [apiKeyA, setApiKeyA] = useState(\"\");\n  const [designGuideA, setDesignGuideA] = useState(\"\");\n  const [designerNotes, setDesignerNotes] = useState(\"\");\n  const [loadingA, setLoadingA] = useState(false);\n  const [currentDocIdA, setCurrentDocIdA] = useState(null);\n\n  // GPT-4o parameters for Group A\n  const [temperatureA, setTemperatureA] = useState(0.7);\n  const [maxTokensA, setMaxTokensA] = useState(2000);\n  const [topPA, setTopPA] = useState(1.0);\n\n  // Group B states\n  const [designerGoalB, setDesignerGoalB] = useState(\"\");\n  const [userProfilesB, setUserProfilesB] = useState([{\n    dimension: \"User ID\",\n    content: \"\"\n  }, {\n    dimension: \"Age\",\n    content: \"\"\n  }, {\n    dimension: \"Gender\",\n    content: \"\"\n  }, {\n    dimension: \"TAM Group\",\n    content: \"\"\n  }, {\n    dimension: \"Commuting Situation\",\n    content: \"\"\n  }]);\n  const [customPromptB, setCustomPromptB] = useState(\"\");\n  const [apiKeyB, setApiKeyB] = useState(\"\");\n  const [designGuideB, setDesignGuideB] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\");\n  const [suggestedDimensions, setSuggestedDimensions] = useState(\"\");\n  const [loadingB, setLoadingB] = useState(false);\n  const [currentDocIdB, setCurrentDocIdB] = useState(null);\n\n  // Common functions\n  const addUserProfile = group => {\n    const newDimension = {\n      dimension: \"\",\n      content: \"\"\n    };\n    group === \"A\" ? setUserProfilesA([...userProfilesA, newDimension]) : setUserProfilesB([...userProfilesB, newDimension]);\n  };\n  const updateUserProfile = (group, index, field, value) => {\n    const updateFn = group === \"A\" ? setUserProfilesA : setUserProfilesB;\n    const profiles = group === \"A\" ? [...userProfilesA] : [...userProfilesB];\n    profiles[index][field] = value;\n    updateFn(profiles);\n  };\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text);\n  };\n\n  // Save designer notes for Group A\n  const saveDesignerNotes = async () => {\n    if (!currentDocIdA || !designerNotes.trim()) return;\n    try {\n      const docRef = doc(db, \"groupA\", currentDocIdA);\n      await updateDoc(docRef, {\n        designerNotes: designerNotes\n      });\n    } catch (error) {\n      console.error(\"Error saving notes:\", error);\n    }\n  };\n\n  // Design guide generation\n  const generateDesignGuide = async group => {\n    const isGroupA = group === \"A\";\n    const states = {\n      apiKey: isGroupA ? apiKeyA : apiKeyB,\n      designerGoal: isGroupA ? designerGoalA : designerGoalB,\n      userProfiles: isGroupA ? userProfilesA : userProfilesB,\n      customPrompt: isGroupA ? customPromptA : customPromptB,\n      setLoading: isGroupA ? setLoadingA : setLoadingB,\n      setDesignGuide: isGroupA ? setDesignGuideA : setDesignGuideB,\n      setCurrentDocId: isGroupA ? setCurrentDocIdA : setCurrentDocIdB\n    };\n    if (!states.apiKey) {\n      states.setDesignGuide(\"Please provide OpenAI API Key\");\n      return;\n    }\n    states.setLoading(true);\n    try {\n      var _data$choices$, _data$choices$$messag;\n      const profileText = states.userProfiles.map(p => `${p.dimension}: ${p.content}`).join(\"\\n\");\n      const fullPrompt = `Designer Goal: ${states.designerGoal}\\nUser Profiles:\\n${profileText}\\nCustom Prompt: ${states.customPrompt}`;\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${states.apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: fullPrompt\n          }],\n          temperature: 0.7\n        })\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      const result = ((_data$choices$ = data.choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || \"Generation failed\";\n      states.setDesignGuide(result);\n\n      // Store data in Firebase with different structures for Group A and Group B\n      const docData = {\n        designerGoal: states.designerGoal,\n        userProfiles: states.userProfiles,\n        customPrompt: states.customPrompt,\n        prompt: fullPrompt,\n        result: result,\n        timestamp: new Date()\n      };\n\n      // For Group A, immediately store designerNotes (even if empty)\n      if (isGroupA) {\n        docData.designerNotes = designerNotes;\n      } else {\n        // For Group B, initialize feedback and suggestedDimensions fields\n        docData.userFeedback = \"\";\n        docData.suggestedDimensions = \"\";\n      }\n      const collectionRef = collection(db, isGroupA ? \"groupA\" : \"groupB\");\n      const docRef = await addDoc(collectionRef, docData);\n      states.setCurrentDocId(docRef.id);\n    } catch (error) {\n      console.error(\"API Error:\", error);\n      states.setDesignGuide(`Error: ${error.message}`);\n    } finally {\n      states.setLoading(false);\n    }\n  };\n\n  // Generate suggested dimensions\n  const generateSuggestedDimensions = async () => {\n    if (!userFeedback.trim() || !apiKeyB) {\n      setSuggestedDimensions(\"Please provide feedback and API key\");\n      return;\n    }\n    if (!currentDocIdB) {\n      setSuggestedDimensions(\"No design guide generated yet. Please generate a design guide first.\");\n      return;\n    }\n    setLoadingB(true);\n    try {\n      var _data$choices$2, _data$choices$2$messa;\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKeyB}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: `Based on this user feedback: \"${userFeedback}\"\\n\\nExtract or suggest SHORT dimension phrases (like \"Environmental Attitude\", \"Price Sensitivity\", \"Technology Acceptance\") that could be used as user profile dimensions. Return ONLY the dimension phrases, one per line, with no explanations, numbering, or additional text.`\n          }]\n        })\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      const dimensions = ((_data$choices$2 = data.choices[0]) === null || _data$choices$2 === void 0 ? void 0 : (_data$choices$2$messa = _data$choices$2.message) === null || _data$choices$2$messa === void 0 ? void 0 : _data$choices$2$messa.content) || \"Generation failed\";\n      setSuggestedDimensions(dimensions);\n\n      // Update the existing group B document instead of creating a new one\n      const docRef = doc(db, \"groupB\", currentDocIdB);\n      await updateDoc(docRef, {\n        userFeedback: userFeedback,\n        suggestedDimensions: dimensions,\n        feedbackTimestamp: new Date()\n      });\n    } catch (error) {\n      console.error(\"Generation failed:\", error);\n      setSuggestedDimensions(`Error: ${error.message}`);\n    } finally {\n      setLoadingB(false);\n    }\n  };\n\n  // UI Components\n  const renderGroupA = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Designer Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter AI designer goal...\",\n        value: designerGoalA,\n        onChange: e => setDesignerGoalA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Dimensions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), userProfilesA.map((profile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"user-dimension\",\n          value: profile.dimension,\n          onChange: e => updateUserProfile(\"A\", index, \"dimension\", e.target.value),\n          placeholder: \"Dimension name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"user-content\",\n          value: profile.content,\n          onChange: e => updateUserProfile(\"A\", index, \"content\", e.target.value),\n          placeholder: \"Dimension content...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => addUserProfile(\"A\"),\n        children: \"Add Dimension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Custom Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter custom prompt...\",\n        value: customPromptA,\n        onChange: e => setCustomPromptA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OpenAI API Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter API key...\",\n        value: apiKeyA,\n        onChange: e => setApiKeyA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"full-width generate-button\",\n        onClick: () => generateDesignGuide(\"A\"),\n        disabled: loadingA,\n        children: loadingA ? \"Generating...\" : \"Generate Design Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-section expanded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"guide-header\",\n        children: [\"Design Guide\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: () => copyToClipboard(designGuideA),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"design-guide-box\",\n        readOnly: true,\n        value: designGuideA,\n        placeholder: \"Generated content will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"notes-header\",\n        children: [\"Expert Notes\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: saveDesignerNotes,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"notes-box\",\n        placeholder: \"Enter expert notes...\",\n        value: designerNotes,\n        onChange: e => setDesignerNotes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const renderGroupB = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Designer Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter AI designer goal...\",\n        value: designerGoalB,\n        onChange: e => setDesignerGoalB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Dimensions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), userProfilesB.map((profile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"user-dimension\",\n          value: profile.dimension,\n          onChange: e => updateUserProfile(\"B\", index, \"dimension\", e.target.value),\n          placeholder: \"Dimension name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"user-content\",\n          value: profile.content,\n          onChange: e => updateUserProfile(\"B\", index, \"content\", e.target.value),\n          placeholder: \"Dimension content...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => addUserProfile(\"B\"),\n        children: \"Add Dimension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Custom Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter custom prompt...\",\n        value: customPromptB,\n        onChange: e => setCustomPromptB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OpenAI API Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter API key...\",\n        value: apiKeyB,\n        onChange: e => setApiKeyB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"full-width generate-button\",\n        onClick: () => generateDesignGuide(\"B\"),\n        disabled: loadingB,\n        children: loadingB ? \"Generating...\" : \"Generate Design Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-section expanded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"guide-header\",\n        children: [\"Design Guide\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: () => copyToClipboard(designGuideB),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"design-guide-box\",\n        readOnly: true,\n        value: designGuideB,\n        placeholder: \"Generated content will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"feedback-header\",\n          children: \"User Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"feedback-box\",\n          placeholder: \"Enter your feedback...\",\n          value: userFeedback,\n          onChange: e => setUserFeedback(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-dimensions-button\",\n          onClick: generateSuggestedDimensions,\n          disabled: loadingB,\n          children: loadingB ? \"Generating...\" : \"Suggest New Dimensions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"suggested-dimensions-header\",\n          children: \"Suggested Dimensions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"suggested-dimensions-box\",\n          readOnly: true,\n          value: suggestedDimensions,\n          placeholder: \"Short dimension phrases will appear here (one per line)...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"Human-AI Collaborative Method for Future-Oriented Design Prompt System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `group-button ${activeGroup === \"A\" ? \"active\" : \"\"}`,\n          onClick: () => setActiveGroup(\"A\"),\n          children: \"Group A (with Design Expert)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `group-button ${activeGroup === \"B\" ? \"active\" : \"\"}`,\n          onClick: () => setActiveGroup(\"B\"),\n          children: \"Group B (without Design Expert)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: activeGroup === \"A\" ? renderGroupA() : renderGroupB()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          /* ✅ 解决背景白色问题 */\n          html, body {\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            font-family: Arial, sans-serif;\n            background: #121212;\n            color: #ffffff;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n\n          .page-title {\n            text-align: center;\n            font-size: 18px;\n            margin-top: 10px;\n            color: #bb86fc;\n          }\n\n          .layout-container {\n            display: flex;\n            flex-direction: column;\n            width: 95vw;\n            height: 95vh;\n          }\n\n          .group-selector {\n            display: flex;\n            justify-content: flex-start;\n            margin-bottom: 10px;\n          }\n\n          .group-button {\n            background: #333;\n            color: white;\n            border: none;\n            border-radius: 5px 5px 0 0;\n            cursor: pointer;\n            padding: 10px 15px;\n            margin-right: 5px;\n          }\n\n          .group-button.active {\n            background: #bb86fc;\n          }\n\n          .container {\n            display: flex;\n            flex: 1;\n            background: #1e1e1e;\n            border-radius: 10px;\n            overflow: hidden;\n          }\n\n          .left-section, .right-section.expanded {\n            width: 50%;\n            display: flex;\n            flex-direction: column;\n            padding: 20px;\n            overflow-y: auto;\n          }\n\n          .user-profile-container {\n            display: flex;\n            flex-direction: row;\n            gap: 20px;\n            margin-bottom: 12px;\n          }\n\n          .user-dimension {\n            width: 40%;\n          }\n\n          .user-content {\n            width: 60%;\n          }\n\n          .generate-button, .small-button, .copy-button, .generate-dimensions-button {\n            background: #bb86fc; \n            color: white;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            padding: 8px 12px;\n            margin-bottom: 15px;\n          }\n\n          .generate-button:disabled, .generate-dimensions-button:disabled {\n            background: #666;\n            cursor: not-allowed;\n          }\n\n          .small-button {\n            width: 40%;\n          }\n\n          .copy-button {\n            font-size: 14px;\n            padding: 5px 10px;\n            background: #bb86fc;\n          }\n\n          .design-guide-box {\n            flex-grow: 1;\n            min-height: 300px;\n            margin-bottom: 15px;\n          }\n\n          .notes-box, .feedback-box, .suggested-dimensions-box {\n            min-height: 80px;\n            margin-bottom: 15px;\n          }\n\n          .feedback-section {\n            display: flex;\n            flex-direction: column;\n          }\n\n          h2 {\n            color: #bb86fc;\n            margin-bottom: 10px;\n          }\n\n          textarea, input {\n            padding: 8px;\n            border: none;\n            border-radius: 5px;\n            background: #333;\n            color: #fff;\n            margin-bottom: 10px;\n          }\n\n          input:focus, textarea:focus {\n            outline: 1px solid #bb86fc;\n          }\n\n          .full-width {\n            width: 100%;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 393,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HUilaym+GWC1RXirXKm1xcOOf/w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","db","collection","addDoc","updateDoc","doc","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","activeGroup","setActiveGroup","designerGoalA","setDesignerGoalA","userProfilesA","setUserProfilesA","dimension","content","customPromptA","setCustomPromptA","apiKeyA","setApiKeyA","designGuideA","setDesignGuideA","designerNotes","setDesignerNotes","loadingA","setLoadingA","currentDocIdA","setCurrentDocIdA","temperatureA","setTemperatureA","maxTokensA","setMaxTokensA","topPA","setTopPA","designerGoalB","setDesignerGoalB","userProfilesB","setUserProfilesB","customPromptB","setCustomPromptB","apiKeyB","setApiKeyB","designGuideB","setDesignGuideB","userFeedback","setUserFeedback","suggestedDimensions","setSuggestedDimensions","loadingB","setLoadingB","currentDocIdB","setCurrentDocIdB","addUserProfile","group","newDimension","updateUserProfile","index","field","value","updateFn","profiles","copyToClipboard","text","navigator","clipboard","writeText","saveDesignerNotes","trim","docRef","error","console","generateDesignGuide","isGroupA","states","apiKey","designerGoal","userProfiles","customPrompt","setLoading","setDesignGuide","setCurrentDocId","_data$choices$","_data$choices$$messag","profileText","map","p","join","fullPrompt","response","fetch","method","headers","body","JSON","stringify","model","messages","role","temperature","ok","Error","status","data","json","result","choices","message","docData","prompt","timestamp","Date","collectionRef","id","generateSuggestedDimensions","_data$choices$2","_data$choices$2$messa","dimensions","feedbackTimestamp","renderGroupA","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","profile","onClick","type","disabled","readOnly","renderGroupB","_c","$RefreshReg$"],"sources":["/Users/zhouyehong-natalie/Desktop/2025.02 LLM 辅助Future-Oriented Design设计/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { db, collection, addDoc, updateDoc, doc } from \"./firebase\";\n\nfunction App() {\n  // State management\n  const [activeGroup, setActiveGroup] = useState(\"A\");\n  \n  // Group A states\n  const [designerGoalA, setDesignerGoalA] = useState(\"\");\n  const [userProfilesA, setUserProfilesA] = useState([\n    { dimension: \"User ID\", content: \"\" },\n    { dimension: \"Age\", content: \"\" },\n    { dimension: \"Gender\", content: \"\" },\n    { dimension: \"TAM Group\", content: \"\" },\n    { dimension: \"Commuting Situation\", content: \"\" }\n  ]);\n  const [customPromptA, setCustomPromptA] = useState(\"\");\n  const [apiKeyA, setApiKeyA] = useState(\"\");\n  const [designGuideA, setDesignGuideA] = useState(\"\");\n  const [designerNotes, setDesignerNotes] = useState(\"\");\n  const [loadingA, setLoadingA] = useState(false);\n  const [currentDocIdA, setCurrentDocIdA] = useState(null);\n  \n  // GPT-4o parameters for Group A\n  const [temperatureA, setTemperatureA] = useState(0.7);\n  const [maxTokensA, setMaxTokensA] = useState(2000);\n  const [topPA, setTopPA] = useState(1.0);\n\n  // Group B states\n  const [designerGoalB, setDesignerGoalB] = useState(\"\");\n  const [userProfilesB, setUserProfilesB] = useState([\n    { dimension: \"User ID\", content: \"\" },\n    { dimension: \"Age\", content: \"\" },\n    { dimension: \"Gender\", content: \"\" },\n    { dimension: \"TAM Group\", content: \"\" },\n    { dimension: \"Commuting Situation\", content: \"\" }\n  ]);\n  const [customPromptB, setCustomPromptB] = useState(\"\");\n  const [apiKeyB, setApiKeyB] = useState(\"\");\n  const [designGuideB, setDesignGuideB] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\");\n  const [suggestedDimensions, setSuggestedDimensions] = useState(\"\");\n  const [loadingB, setLoadingB] = useState(false);\n  const [currentDocIdB, setCurrentDocIdB] = useState(null);\n\n  // Common functions\n  const addUserProfile = (group) => {\n    const newDimension = { dimension: \"\", content: \"\" };\n    group === \"A\" \n      ? setUserProfilesA([...userProfilesA, newDimension])\n      : setUserProfilesB([...userProfilesB, newDimension]);\n  };\n\n  const updateUserProfile = (group, index, field, value) => {\n    const updateFn = group === \"A\" ? setUserProfilesA : setUserProfilesB;\n    const profiles = group === \"A\" ? [...userProfilesA] : [...userProfilesB];\n    profiles[index][field] = value;\n    updateFn(profiles);\n  };\n\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  // Save designer notes for Group A\n  const saveDesignerNotes = async () => {\n    if (!currentDocIdA || !designerNotes.trim()) return;\n    \n    try {\n      const docRef = doc(db, \"groupA\", currentDocIdA);\n      await updateDoc(docRef, {\n        designerNotes: designerNotes\n      });\n    } catch (error) {\n      console.error(\"Error saving notes:\", error);\n    }\n  };\n\n  // Design guide generation\n  const generateDesignGuide = async (group) => {\n    const isGroupA = group === \"A\";\n    const states = {\n      apiKey: isGroupA ? apiKeyA : apiKeyB,\n      designerGoal: isGroupA ? designerGoalA : designerGoalB,\n      userProfiles: isGroupA ? userProfilesA : userProfilesB,\n      customPrompt: isGroupA ? customPromptA : customPromptB,\n      setLoading: isGroupA ? setLoadingA : setLoadingB,\n      setDesignGuide: isGroupA ? setDesignGuideA : setDesignGuideB,\n      setCurrentDocId: isGroupA ? setCurrentDocIdA : setCurrentDocIdB\n    };\n\n    if (!states.apiKey) {\n      states.setDesignGuide(\"Please provide OpenAI API Key\");\n      return;\n    }\n\n    states.setLoading(true);\n    \n    try {\n      const profileText = states.userProfiles\n        .map(p => `${p.dimension}: ${p.content}`)\n        .join(\"\\n\");\n      \n      const fullPrompt = `Designer Goal: ${states.designerGoal}\\nUser Profiles:\\n${profileText}\\nCustom Prompt: ${states.customPrompt}`;\n\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${states.apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{ role: \"system\", content: fullPrompt }],\n          temperature: 0.7\n        })\n      });\n\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      \n      const data = await response.json();\n      const result = data.choices[0]?.message?.content || \"Generation failed\";\n\n      states.setDesignGuide(result);\n      \n      // Store data in Firebase with different structures for Group A and Group B\n      const docData = {\n        designerGoal: states.designerGoal,\n        userProfiles: states.userProfiles,\n        customPrompt: states.customPrompt,\n        prompt: fullPrompt,\n        result: result,\n        timestamp: new Date()\n      };\n      \n      // For Group A, immediately store designerNotes (even if empty)\n      if (isGroupA) {\n        docData.designerNotes = designerNotes;\n      } else {\n        // For Group B, initialize feedback and suggestedDimensions fields\n        docData.userFeedback = \"\";\n        docData.suggestedDimensions = \"\";\n      }\n\n      const collectionRef = collection(db, isGroupA ? \"groupA\" : \"groupB\");\n      const docRef = await addDoc(collectionRef, docData);\n      states.setCurrentDocId(docRef.id);\n      \n    } catch (error) {\n      console.error(\"API Error:\", error);\n      states.setDesignGuide(`Error: ${error.message}`);\n    } finally {\n      states.setLoading(false);\n    }\n  };\n\n  // Generate suggested dimensions\n  const generateSuggestedDimensions = async () => {\n    if (!userFeedback.trim() || !apiKeyB) {\n      setSuggestedDimensions(\"Please provide feedback and API key\");\n      return;\n    }\n\n    if (!currentDocIdB) {\n      setSuggestedDimensions(\"No design guide generated yet. Please generate a design guide first.\");\n      return;\n    }\n\n    setLoadingB(true);\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKeyB}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: `Based on this user feedback: \"${userFeedback}\"\\n\\nExtract or suggest SHORT dimension phrases (like \"Environmental Attitude\", \"Price Sensitivity\", \"Technology Acceptance\") that could be used as user profile dimensions. Return ONLY the dimension phrases, one per line, with no explanations, numbering, or additional text.`\n          }]\n        })\n      });\n\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      \n      const data = await response.json();\n      const dimensions = data.choices[0]?.message?.content || \"Generation failed\";\n      \n      setSuggestedDimensions(dimensions);\n      \n      // Update the existing group B document instead of creating a new one\n      const docRef = doc(db, \"groupB\", currentDocIdB);\n      await updateDoc(docRef, {\n        userFeedback: userFeedback,\n        suggestedDimensions: dimensions,\n        feedbackTimestamp: new Date()\n      });\n    } catch (error) {\n      console.error(\"Generation failed:\", error);\n      setSuggestedDimensions(`Error: ${error.message}`);\n    } finally {\n      setLoadingB(false);\n    }\n  };\n\n  // UI Components\n  const renderGroupA = () => (\n    <>\n      <div className=\"left-section\">\n        <h2>Designer Goal</h2>\n        <textarea\n          placeholder=\"Enter AI designer goal...\"\n          value={designerGoalA}\n          onChange={(e) => setDesignerGoalA(e.target.value)}\n        />\n        <h2>User Dimensions</h2>\n        {userProfilesA.map((profile, index) => (\n          <div key={index} className=\"user-profile-container\">\n            <input\n              className=\"user-dimension\"\n              value={profile.dimension}\n              onChange={(e) => updateUserProfile(\"A\", index, \"dimension\", e.target.value)}\n              placeholder=\"Dimension name\"\n            />\n            <textarea\n              className=\"user-content\"\n              value={profile.content}\n              onChange={(e) => updateUserProfile(\"A\", index, \"content\", e.target.value)}\n              placeholder=\"Dimension content...\"\n            />\n          </div>\n        ))}\n        <button className=\"small-button\" onClick={() => addUserProfile(\"A\")}>\n          Add Dimension\n        </button>\n        <h2>Custom Prompt</h2>\n        <textarea\n          placeholder=\"Enter custom prompt...\"\n          value={customPromptA}\n          onChange={(e) => setCustomPromptA(e.target.value)}\n        />\n        <h2>OpenAI API Key</h2>\n        <input\n          type=\"password\"\n          placeholder=\"Enter API key...\"\n          value={apiKeyA}\n          onChange={(e) => setApiKeyA(e.target.value)}\n        />\n        <button \n          className=\"full-width generate-button\"\n          onClick={() => generateDesignGuide(\"A\")}\n          disabled={loadingA}\n        >\n          {loadingA ? \"Generating...\" : \"Generate Design Guide\"}\n        </button>\n      </div>\n\n      <div className=\"right-section expanded\">\n        <h2 className=\"guide-header\">\n          Design Guide\n          <button \n            className=\"copy-button\" \n            onClick={() => copyToClipboard(designGuideA)}\n          >\n            Copy\n          </button>\n        </h2>\n        <textarea \n          className=\"design-guide-box\"\n          readOnly\n          value={designGuideA}\n          placeholder=\"Generated content will appear here...\"\n        />\n\n        <h2 className=\"notes-header\">\n          Expert Notes\n          <button \n            className=\"copy-button\" \n            onClick={saveDesignerNotes}\n          >\n            Save\n          </button>\n        </h2>\n        <textarea\n          className=\"notes-box\"\n          placeholder=\"Enter expert notes...\"\n          value={designerNotes}\n          onChange={(e) => setDesignerNotes(e.target.value)}\n        />\n      </div>\n    </>\n  );\n\n  const renderGroupB = () => (\n    <>\n      <div className=\"left-section\">\n        <h2>Designer Goal</h2>\n        <textarea\n          placeholder=\"Enter AI designer goal...\"\n          value={designerGoalB}\n          onChange={(e) => setDesignerGoalB(e.target.value)}\n        />\n        <h2>User Dimensions</h2>\n        {userProfilesB.map((profile, index) => (\n          <div key={index} className=\"user-profile-container\">\n            <input\n              className=\"user-dimension\"\n              value={profile.dimension}\n              onChange={(e) => updateUserProfile(\"B\", index, \"dimension\", e.target.value)}\n              placeholder=\"Dimension name\"\n            />\n            <textarea\n              className=\"user-content\"\n              value={profile.content}\n              onChange={(e) => updateUserProfile(\"B\", index, \"content\", e.target.value)}\n              placeholder=\"Dimension content...\"\n            />\n          </div>\n        ))}\n        <button className=\"small-button\" onClick={() => addUserProfile(\"B\")}>\n          Add Dimension\n        </button>\n        <h2>Custom Prompt</h2>\n        <textarea\n          placeholder=\"Enter custom prompt...\"\n          value={customPromptB}\n          onChange={(e) => setCustomPromptB(e.target.value)}\n        />\n        <h2>OpenAI API Key</h2>\n        <input\n          type=\"password\"\n          placeholder=\"Enter API key...\"\n          value={apiKeyB}\n          onChange={(e) => setApiKeyB(e.target.value)}\n        />\n        <button \n          className=\"full-width generate-button\"\n          onClick={() => generateDesignGuide(\"B\")}\n          disabled={loadingB}\n        >\n          {loadingB ? \"Generating...\" : \"Generate Design Guide\"}\n        </button>\n      </div>\n\n      <div className=\"right-section expanded\">\n        <h2 className=\"guide-header\">\n          Design Guide\n          <button \n            className=\"copy-button\" \n            onClick={() => copyToClipboard(designGuideB)}\n          >\n            Copy\n          </button>\n        </h2>\n        <textarea \n          className=\"design-guide-box\"\n          readOnly\n          value={designGuideB}\n          placeholder=\"Generated content will appear here...\"\n        />\n\n        <div className=\"feedback-section\">\n          <h2 className=\"feedback-header\">User Feedback</h2>\n          <textarea\n            className=\"feedback-box\"\n            placeholder=\"Enter your feedback...\"\n            value={userFeedback}\n            onChange={(e) => setUserFeedback(e.target.value)}\n          />\n          <button \n            className=\"generate-dimensions-button\" \n            onClick={generateSuggestedDimensions}\n            disabled={loadingB}\n          >\n            {loadingB ? \"Generating...\" : \"Suggest New Dimensions\"}\n          </button>\n          \n          <h2 className=\"suggested-dimensions-header\">Suggested Dimensions</h2>\n          <textarea\n            className=\"suggested-dimensions-box\"\n            readOnly\n            value={suggestedDimensions}\n            placeholder=\"Short dimension phrases will appear here (one per line)...\"\n          />\n        </div>\n      </div>\n    </>\n  );\n\nreturn (\n    <div className=\"app-container\">\n      <h1 className=\"page-title\">Human-AI Collaborative Method for Future-Oriented Design Prompt System</h1>\n      \n      <div className=\"layout-container\">\n        <div className=\"group-selector\">\n          <button \n            className={`group-button ${activeGroup === \"A\" ? \"active\" : \"\"}`} \n            onClick={() => setActiveGroup(\"A\")}\n          >\n            Group A (with Design Expert)\n          </button>\n          <button \n            className={`group-button ${activeGroup === \"B\" ? \"active\" : \"\"}`} \n            onClick={() => setActiveGroup(\"B\")}\n          >\n            Group B (without Design Expert)\n          </button>\n        </div>\n        \n        <div className=\"container\">\n          {activeGroup === \"A\" ? renderGroupA() : renderGroupB()}\n        </div>\n      </div>\n\n      <style>\n        {`\n          /* ✅ 解决背景白色问题 */\n          html, body {\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            font-family: Arial, sans-serif;\n            background: #121212;\n            color: #ffffff;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n\n          .page-title {\n            text-align: center;\n            font-size: 18px;\n            margin-top: 10px;\n            color: #bb86fc;\n          }\n\n          .layout-container {\n            display: flex;\n            flex-direction: column;\n            width: 95vw;\n            height: 95vh;\n          }\n\n          .group-selector {\n            display: flex;\n            justify-content: flex-start;\n            margin-bottom: 10px;\n          }\n\n          .group-button {\n            background: #333;\n            color: white;\n            border: none;\n            border-radius: 5px 5px 0 0;\n            cursor: pointer;\n            padding: 10px 15px;\n            margin-right: 5px;\n          }\n\n          .group-button.active {\n            background: #bb86fc;\n          }\n\n          .container {\n            display: flex;\n            flex: 1;\n            background: #1e1e1e;\n            border-radius: 10px;\n            overflow: hidden;\n          }\n\n          .left-section, .right-section.expanded {\n            width: 50%;\n            display: flex;\n            flex-direction: column;\n            padding: 20px;\n            overflow-y: auto;\n          }\n\n          .user-profile-container {\n            display: flex;\n            flex-direction: row;\n            gap: 20px;\n            margin-bottom: 12px;\n          }\n\n          .user-dimension {\n            width: 40%;\n          }\n\n          .user-content {\n            width: 60%;\n          }\n\n          .generate-button, .small-button, .copy-button, .generate-dimensions-button {\n            background: #bb86fc; \n            color: white;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            padding: 8px 12px;\n            margin-bottom: 15px;\n          }\n\n          .generate-button:disabled, .generate-dimensions-button:disabled {\n            background: #666;\n            cursor: not-allowed;\n          }\n\n          .small-button {\n            width: 40%;\n          }\n\n          .copy-button {\n            font-size: 14px;\n            padding: 5px 10px;\n            background: #bb86fc;\n          }\n\n          .design-guide-box {\n            flex-grow: 1;\n            min-height: 300px;\n            margin-bottom: 15px;\n          }\n\n          .notes-box, .feedback-box, .suggested-dimensions-box {\n            min-height: 80px;\n            margin-bottom: 15px;\n          }\n\n          .feedback-section {\n            display: flex;\n            flex-direction: column;\n          }\n\n          h2 {\n            color: #bb86fc;\n            margin-bottom: 10px;\n          }\n\n          textarea, input {\n            padding: 8px;\n            border: none;\n            border-radius: 5px;\n            background: #333;\n            color: #fff;\n            margin-bottom: 10px;\n          }\n\n          input:focus, textarea:focus {\n            outline: 1px solid #bb86fc;\n          }\n\n          .full-width {\n            width: 100%;\n          }\n        `}\n      </style>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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AAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTzH,OAAA;UACEqH,SAAS,EAAE,gBAAgBhH,WAAW,KAAK,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAG;UACjE0H,OAAO,EAAEA,CAAA,KAAMzH,cAAc,CAAC,GAAG,CAAE;UAAA8G,QAAA,EACpC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENzH,OAAA;QAAKqH,SAAS,EAAC,WAAW;QAAAD,QAAA,EACvB/G,WAAW,KAAK,GAAG,GAAG8G,YAAY,CAAC,CAAC,GAAGgB,YAAY,CAAC;MAAC;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENzH,OAAA;MAAAoH,QAAA,EACG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACrH,EAAA,CA/iBQD,GAAG;AAAAiI,EAAA,GAAHjI,GAAG;AAijBZ,eAAeA,GAAG;AAAC,IAAAiI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}