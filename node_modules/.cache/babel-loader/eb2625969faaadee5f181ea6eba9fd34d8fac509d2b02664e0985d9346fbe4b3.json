{"ast":null,"code":"var _jsxFileName = \"/Users/zhouyehong-natalie/Desktop/2025.02 LLM \\u8F85\\u52A9Future-Oriented Design\\u8BBE\\u8BA1/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { db, collection, addDoc, doc, updateDoc } from \"./firebase\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentGroup, setCurrentGroup] = useState(\"A\"); // A 组 or B 组\n  const [designerGoal, setDesignerGoal] = useState(\"\");\n  const [userProfiles, setUserProfiles] = useState([{\n    dimension: \"User ID\",\n    content: \"\"\n  }, {\n    dimension: \"Age\",\n    content: \"\"\n  }, {\n    dimension: \"Gender\",\n    content: \"\"\n  }, {\n    dimension: \"TAM Group\",\n    content: \"\"\n  }, {\n    dimension: \"Commuting Situation\",\n    content: \"\"\n  }]);\n  const [customPrompt, setCustomPrompt] = useState(\"\");\n  const [apiKey, setApiKey] = useState(\"\");\n  const [designGuide, setDesignGuide] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\"); // Group B 用户反馈\n  const [additionalDimensions, setAdditionalDimensions] = useState(\"\"); // 需要补充的维度\n  const [loading, setLoading] = useState(false);\n  const [lastDocId, setLastDocId] = useState(null);\n  const addUserProfile = () => {\n    setUserProfiles([...userProfiles, {\n      dimension: \"\",\n      content: \"\"\n    }]);\n  };\n  const updateUserProfile = (index, field, value) => {\n    const updatedProfiles = [...userProfiles];\n    updatedProfiles[index][field] = value;\n    setUserProfiles(updatedProfiles);\n  };\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(designGuide);\n  };\n\n  // 🔥 调用 GPT-4o 生成设计指南\n  const callGPT4oAPI = async () => {\n    if (!apiKey) {\n      setDesignGuide(\"Please provide OpenAI API Key.\");\n      return;\n    }\n    setLoading(true);\n    let userProfileText = userProfiles.map((profile, index) => `Dimension ${index + 1}: ${profile.dimension}\\nContent: ${profile.content}`).join(\"\\n\\n\");\n    let fullPrompt = `AI Designer Goal: ${designerGoal}\\n\\nUser Profiles:\\n${userProfileText}\\n\\nCustom Prompt:\\n${customPrompt}\\n\\nPlease generate a design guide based on the above information.`;\n    if (currentGroup === \"B\") {\n      fullPrompt += `\\n\\nUser Feedback: ${userFeedback}\\n\\nGenerate new Additional Dimensions based on this feedback.`;\n    }\n    try {\n      var _data$choices$, _data$choices$$messag;\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: fullPrompt\n          }],\n          max_tokens: 2000,\n          temperature: 0.7\n        })\n      });\n      const data = await response.json();\n      const outputText = ((_data$choices$ = data.choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || \"Generation failed, please check API request.\";\n      setDesignGuide(outputText);\n      if (currentGroup === \"B\") {\n        setAdditionalDimensions(outputText); // B 组 生成新的维度\n      }\n      const docRef = await addDoc(collection(db, \"gpt_interactions\"), {\n        timestamp: new Date().toISOString(),\n        input: fullPrompt,\n        output: outputText,\n        notes: currentGroup === \"A\" ? notes : userFeedback,\n        additionalDimensions: currentGroup === \"B\" ? outputText : \"\"\n      });\n      setLastDocId(docRef.id);\n    } catch (error) {\n      console.error(\"❌ API 请求错误:\", error);\n      setDesignGuide(\"API request failed, please check network or API Key.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentGroup(\"A\"),\n        children: \"Group A (With Expert Designers)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentGroup(\"B\"),\n        children: \"Group B (Without Expert Designers)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Human-AI Collaborative Method for Future-Oriented Design Prompt System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Designer Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter AI designer goal definition...\",\n        value: designerGoal,\n        onChange: e => setDesignerGoal(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile (Multiple Dimensions)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), userProfiles.map((profile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: profile.dimension,\n          onChange: e => updateUserProfile(index, \"dimension\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: `Enter ${profile.dimension}...`,\n          value: profile.content,\n          onChange: e => updateUserProfile(index, \"content\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: addUserProfile,\n        children: \"Add Dimension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Custom Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter custom Prompt...\",\n        value: customPrompt,\n        onChange: e => setCustomPrompt(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OpenAI API Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter your OpenAI API Key...\",\n        value: apiKey,\n        onChange: e => setApiKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"full-width generate-button\",\n        onClick: callGPT4oAPI,\n        disabled: loading,\n        children: loading ? \"Generating...\" : \"Generate Design Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Design Guide \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: copyToClipboard,\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: designGuide,\n        placeholder: \"The design guide will be generated here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), currentGroup === \"A\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Expert Designer Notes \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"copy-button\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter expert designer notes...\",\n          value: notes,\n          onChange: e => setNotes(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"User Feedback \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"copy-button\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter feedback...\",\n          value: userFeedback,\n          onChange: e => setUserFeedback(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Additional Dimensions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          readOnly: true,\n          value: additionalDimensions,\n          placeholder: \"AI-generated dimensions based on feedback...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Dfw72MepKt26m/hZG/9bvW2prPs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","db","collection","addDoc","doc","updateDoc","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentGroup","setCurrentGroup","designerGoal","setDesignerGoal","userProfiles","setUserProfiles","dimension","content","customPrompt","setCustomPrompt","apiKey","setApiKey","designGuide","setDesignGuide","notes","setNotes","userFeedback","setUserFeedback","additionalDimensions","setAdditionalDimensions","loading","setLoading","lastDocId","setLastDocId","addUserProfile","updateUserProfile","index","field","value","updatedProfiles","copyToClipboard","navigator","clipboard","writeText","callGPT4oAPI","userProfileText","map","profile","join","fullPrompt","_data$choices$","_data$choices$$messag","response","fetch","method","headers","body","JSON","stringify","model","messages","role","max_tokens","temperature","data","json","outputText","choices","message","docRef","timestamp","Date","toISOString","input","output","id","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","type","disabled","readOnly","_c","$RefreshReg$"],"sources":["/Users/zhouyehong-natalie/Desktop/2025.02 LLM 辅助Future-Oriented Design设计/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { db, collection, addDoc, doc, updateDoc } from \"./firebase\";\n\nfunction App() {\n  const [currentGroup, setCurrentGroup] = useState(\"A\"); // A 组 or B 组\n  const [designerGoal, setDesignerGoal] = useState(\"\");\n  const [userProfiles, setUserProfiles] = useState([\n    { dimension: \"User ID\", content: \"\" },\n    { dimension: \"Age\", content: \"\" },\n    { dimension: \"Gender\", content: \"\" },\n    { dimension: \"TAM Group\", content: \"\" },\n    { dimension: \"Commuting Situation\", content: \"\" }\n  ]);\n  const [customPrompt, setCustomPrompt] = useState(\"\");\n  const [apiKey, setApiKey] = useState(\"\");\n  const [designGuide, setDesignGuide] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\"); // Group B 用户反馈\n  const [additionalDimensions, setAdditionalDimensions] = useState(\"\"); // 需要补充的维度\n  const [loading, setLoading] = useState(false);\n  const [lastDocId, setLastDocId] = useState(null);\n\n  const addUserProfile = () => {\n    setUserProfiles([...userProfiles, { dimension: \"\", content: \"\" }]);\n  };\n\n  const updateUserProfile = (index, field, value) => {\n    const updatedProfiles = [...userProfiles];\n    updatedProfiles[index][field] = value;\n    setUserProfiles(updatedProfiles);\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(designGuide);\n  };\n\n  // 🔥 调用 GPT-4o 生成设计指南\n  const callGPT4oAPI = async () => {\n    if (!apiKey) {\n      setDesignGuide(\"Please provide OpenAI API Key.\");\n      return;\n    }\n\n    setLoading(true);\n    let userProfileText = userProfiles\n      .map((profile, index) => `Dimension ${index + 1}: ${profile.dimension}\\nContent: ${profile.content}`)\n      .join(\"\\n\\n\");\n\n    let fullPrompt = `AI Designer Goal: ${designerGoal}\\n\\nUser Profiles:\\n${userProfileText}\\n\\nCustom Prompt:\\n${customPrompt}\\n\\nPlease generate a design guide based on the above information.`;\n\n    if (currentGroup === \"B\") {\n      fullPrompt += `\\n\\nUser Feedback: ${userFeedback}\\n\\nGenerate new Additional Dimensions based on this feedback.`;\n    }\n\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{ role: \"system\", content: fullPrompt }],\n          max_tokens: 2000,\n          temperature: 0.7\n        })\n      });\n\n      const data = await response.json();\n      const outputText = data.choices[0]?.message?.content || \"Generation failed, please check API request.\";\n      setDesignGuide(outputText);\n\n      if (currentGroup === \"B\") {\n        setAdditionalDimensions(outputText); // B 组 生成新的维度\n      }\n\n      const docRef = await addDoc(collection(db, \"gpt_interactions\"), {\n        timestamp: new Date().toISOString(),\n        input: fullPrompt,\n        output: outputText,\n        notes: currentGroup === \"A\" ? notes : userFeedback,\n        additionalDimensions: currentGroup === \"B\" ? outputText : \"\"\n      });\n\n      setLastDocId(docRef.id);\n    } catch (error) {\n      console.error(\"❌ API 请求错误:\", error);\n      setDesignGuide(\"API request failed, please check network or API Key.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"sidebar\">\n        <button onClick={() => setCurrentGroup(\"A\")}>Group A (With Expert Designers)</button>\n        <button onClick={() => setCurrentGroup(\"B\")}>Group B (Without Expert Designers)</button>\n      </div>\n\n      <div className=\"main-content\">\n        <h1 className=\"page-title\">Human-AI Collaborative Method for Future-Oriented Design Prompt System</h1>\n        <h2>Designer Goal</h2>\n        <textarea\n          placeholder=\"Enter AI designer goal definition...\"\n          value={designerGoal}\n          onChange={(e) => setDesignerGoal(e.target.value)}\n        />\n        \n        <h2>User Profile (Multiple Dimensions)</h2>\n        {userProfiles.map((profile, index) => (\n          <div key={index} className=\"user-profile-container\">\n            <input\n              value={profile.dimension}\n              onChange={(e) => updateUserProfile(index, \"dimension\", e.target.value)}\n            />\n            <textarea\n              placeholder={`Enter ${profile.dimension}...`}\n              value={profile.content}\n              onChange={(e) => updateUserProfile(index, \"content\", e.target.value)}\n            />\n          </div>\n        ))}\n        <button className=\"small-button\" onClick={addUserProfile}>Add Dimension</button>\n\n        <h2>Custom Prompt</h2>\n        <textarea placeholder=\"Enter custom Prompt...\" value={customPrompt} onChange={(e) => setCustomPrompt(e.target.value)} />\n\n        <h2>OpenAI API Key</h2>\n        <input type=\"password\" placeholder=\"Enter your OpenAI API Key...\" value={apiKey} onChange={(e) => setApiKey(e.target.value)} />\n        \n        <button className=\"full-width generate-button\" onClick={callGPT4oAPI} disabled={loading}>{loading ? \"Generating...\" : \"Generate Design Guide\"}</button>\n\n        <h2>Design Guide <button className=\"copy-button\" onClick={copyToClipboard}>Copy</button></h2>\n        <textarea readOnly value={designGuide} placeholder=\"The design guide will be generated here...\" />\n\n        {currentGroup === \"A\" ? (\n          <>\n            <h2>Expert Designer Notes <button className=\"copy-button\">Save</button></h2>\n            <textarea placeholder=\"Enter expert designer notes...\" value={notes} onChange={(e) => setNotes(e.target.value)} />\n          </>\n        ) : (\n          <>\n            <h2>User Feedback <button className=\"copy-button\">Save</button></h2>\n            <textarea placeholder=\"Enter feedback...\" value={userFeedback} onChange={(e) => setUserFeedback(e.target.value)} />\n\n            <h2>Additional Dimensions</h2>\n            <textarea readOnly value={additionalDimensions} placeholder=\"AI-generated dimensions based on feedback...\" />\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}