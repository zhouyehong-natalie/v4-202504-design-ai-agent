{"ast":null,"code":"var _jsxFileName = \"/Users/zhouyehong-natalie/Desktop/2025.02 LLM \\u8F85\\u52A9Future-Oriented Design\\u8BBE\\u8BA1/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { db, collection, addDoc, doc, updateDoc } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeGroup, setActiveGroup] = useState(\"A\");\n\n  // Group A (With Expert Designers)\n  const [designerGoalA, setDesignerGoalA] = useState(\"\");\n  const [userProfilesA, setUserProfilesA] = useState([{\n    dimension: \"User ID\",\n    content: \"\"\n  }, {\n    dimension: \"Age\",\n    content: \"\"\n  }, {\n    dimension: \"Gender\",\n    content: \"\"\n  }, {\n    dimension: \"TAM Group\",\n    content: \"\"\n  }, {\n    dimension: \"Commuting Situation\",\n    content: \"\"\n  }]);\n  const [customPromptA, setCustomPromptA] = useState(\"\");\n  const [apiKeyA, setApiKeyA] = useState(\"\");\n  const [designGuideA, setDesignGuideA] = useState(\"\");\n  const [designerNotes, setDesignerNotes] = useState(\"\");\n  const [loadingA, setLoadingA] = useState(false);\n  const [lastDocIdA, setLastDocIdA] = useState(null);\n\n  // Group B (Without Expert Designers)\n  const [designerGoalB, setDesignerGoalB] = useState(\"\");\n  const [userProfilesB, setUserProfilesB] = useState([{\n    dimension: \"User ID\",\n    content: \"\"\n  }, {\n    dimension: \"Age\",\n    content: \"\"\n  }, {\n    dimension: \"Gender\",\n    content: \"\"\n  }, {\n    dimension: \"TAM Group\",\n    content: \"\"\n  }, {\n    dimension: \"Commuting Situation\",\n    content: \"\"\n  }]);\n  const [customPromptB, setCustomPromptB] = useState(\"\");\n  const [apiKeyB, setApiKeyB] = useState(\"\");\n  const [designGuideB, setDesignGuideB] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\");\n  const [suggestedDimensions, setSuggestedDimensions] = useState(\"\");\n  const [loadingB, setLoadingB] = useState(false);\n  const [lastDocIdB, setLastDocIdB] = useState(null);\n  const addUserProfile = group => {\n    if (group === \"A\") {\n      setUserProfilesA([...userProfilesA, {\n        dimension: \"\",\n        content: \"\"\n      }]);\n    } else {\n      setUserProfilesB([...userProfilesB, {\n        dimension: \"\",\n        content: \"\"\n      }]);\n    }\n  };\n  const updateUserProfile = (group, index, field, value) => {\n    if (group === \"A\") {\n      const updatedProfiles = [...userProfilesA];\n      updatedProfiles[index][field] = value;\n      setUserProfilesA(updatedProfiles);\n    } else {\n      const updatedProfiles = [...userProfilesB];\n      updatedProfiles[index][field] = value;\n      setUserProfilesB(updatedProfiles);\n    }\n  };\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text);\n  };\n  const callGPT4oAPI = async group => {\n    if (group === \"A\" && !apiKeyA || group === \"B\" && !apiKeyB) {\n      alert(\"Please provide OpenAI API Key.\");\n      return;\n    }\n    if (group === \"B\" && !userFeedback.trim()) {\n      alert(\"Please enter user feedback before generating additional dimensions.\");\n      return;\n    }\n    const setLoading = group === \"A\" ? setLoadingA : setLoadingB;\n    const setDesignGuide = group === \"A\" ? setDesignGuideA : setDesignGuideB;\n    const userProfiles = group === \"A\" ? userProfilesA : userProfilesB;\n    const designerGoal = group === \"A\" ? designerGoalA : designerGoalB;\n    const customPrompt = group === \"A\" ? customPromptA : customPromptB;\n    const apiKey = group === \"A\" ? apiKeyA : apiKeyB;\n    const setSuggestedDimensions = group === \"B\" ? setSuggestedDimensions : null;\n    setLoading(true);\n    let userProfileText = userProfiles.map((profile, index) => `Dimension ${index + 1}: ${profile.dimension}\\nContent: ${profile.content}`).join(\"\\n\\n\");\n    let fullPrompt = `AI Designer Goal: ${designerGoal}\\n\\nUser Profiles:\\n${userProfileText}\\n\\nCustom Prompt:\\n${customPrompt}`;\n    if (group === \"B\") {\n      fullPrompt += `\\n\\nUser Feedback: ${userFeedback}\\n\\nGenerate new Additional Dimensions based on this feedback.`;\n    }\n    try {\n      var _data$choices$, _data$choices$$messag;\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{\n            role: \"system\",\n            content: fullPrompt\n          }],\n          max_tokens: 2000,\n          temperature: 0.7\n        })\n      });\n      const data = await response.json();\n      const outputText = ((_data$choices$ = data.choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || \"Generation failed, please check API request.\";\n      setDesignGuide(outputText);\n      if (group === \"B\") {\n        setSuggestedDimensions(outputText);\n      }\n      await addDoc(collection(db, \"gpt_interactions\"), {\n        timestamp: new Date().toISOString(),\n        input: fullPrompt,\n        output: outputText,\n        notes: group === \"A\" ? designerNotes : userFeedback,\n        additionalDimensions: group === \"B\" ? outputText : \"\"\n      });\n    } catch (error) {\n      console.error(\"❌ API Request Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveGroup(\"A\"),\n        children: \"Group A (With Expert Designers)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveGroup(\"B\"),\n        children: \"Group B (Without Expert Designers)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Human-AI Collaborative Method for Future-Oriented Design Prompt System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Designer Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter AI designer goal definition...\",\n        value: activeGroup === \"A\" ? designerGoalA : designerGoalB,\n        onChange: e => activeGroup === \"A\" ? setDesignerGoalA(e.target.value) : setDesignerGoalB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile (Multiple Dimensions)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), (activeGroup === \"A\" ? userProfilesA : userProfilesB).map((profile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: profile.dimension,\n          onChange: e => updateUserProfile(activeGroup, index, \"dimension\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: `Enter ${profile.dimension}...`,\n          value: profile.content,\n          onChange: e => updateUserProfile(activeGroup, index, \"content\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => addUserProfile(activeGroup),\n        children: \"Add Dimension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"full-width generate-button\",\n        onClick: () => callGPT4oAPI(activeGroup),\n        children: activeGroup === \"A\" ? loadingA ? \"Generating...\" : \"Generate Design Guide\" : loadingB ? \"Generating...\" : \"Generate Additional Dimensions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Design Guide \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: () => copyToClipboard(activeGroup === \"A\" ? designGuideA : designGuideB),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: activeGroup === \"A\" ? designGuideA : designGuideB\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wAc5QE6a5YKZs3nK0FPp2othcCc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","db","collection","addDoc","doc","updateDoc","jsxDEV","_jsxDEV","App","_s","activeGroup","setActiveGroup","designerGoalA","setDesignerGoalA","userProfilesA","setUserProfilesA","dimension","content","customPromptA","setCustomPromptA","apiKeyA","setApiKeyA","designGuideA","setDesignGuideA","designerNotes","setDesignerNotes","loadingA","setLoadingA","lastDocIdA","setLastDocIdA","designerGoalB","setDesignerGoalB","userProfilesB","setUserProfilesB","customPromptB","setCustomPromptB","apiKeyB","setApiKeyB","designGuideB","setDesignGuideB","userFeedback","setUserFeedback","suggestedDimensions","setSuggestedDimensions","loadingB","setLoadingB","lastDocIdB","setLastDocIdB","addUserProfile","group","updateUserProfile","index","field","value","updatedProfiles","copyToClipboard","text","navigator","clipboard","writeText","callGPT4oAPI","alert","trim","setLoading","setDesignGuide","userProfiles","designerGoal","customPrompt","apiKey","userProfileText","map","profile","join","fullPrompt","_data$choices$","_data$choices$$messag","response","fetch","method","headers","body","JSON","stringify","model","messages","role","max_tokens","temperature","data","json","outputText","choices","message","timestamp","Date","toISOString","input","output","notes","additionalDimensions","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","readOnly","_c","$RefreshReg$"],"sources":["/Users/zhouyehong-natalie/Desktop/2025.02 LLM 辅助Future-Oriented Design设计/WEB-TOOL/v3-firebase-20250315-design-ai-agent/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { db, collection, addDoc, doc, updateDoc } from \"./firebase\";\n\nfunction App() {\n  const [activeGroup, setActiveGroup] = useState(\"A\");\n\n  // Group A (With Expert Designers)\n  const [designerGoalA, setDesignerGoalA] = useState(\"\");\n  const [userProfilesA, setUserProfilesA] = useState([\n    { dimension: \"User ID\", content: \"\" },\n    { dimension: \"Age\", content: \"\" },\n    { dimension: \"Gender\", content: \"\" },\n    { dimension: \"TAM Group\", content: \"\" },\n    { dimension: \"Commuting Situation\", content: \"\" }\n  ]);\n  const [customPromptA, setCustomPromptA] = useState(\"\");\n  const [apiKeyA, setApiKeyA] = useState(\"\");\n  const [designGuideA, setDesignGuideA] = useState(\"\");\n  const [designerNotes, setDesignerNotes] = useState(\"\");\n  const [loadingA, setLoadingA] = useState(false);\n  const [lastDocIdA, setLastDocIdA] = useState(null);\n\n  // Group B (Without Expert Designers)\n  const [designerGoalB, setDesignerGoalB] = useState(\"\");\n  const [userProfilesB, setUserProfilesB] = useState([\n    { dimension: \"User ID\", content: \"\" },\n    { dimension: \"Age\", content: \"\" },\n    { dimension: \"Gender\", content: \"\" },\n    { dimension: \"TAM Group\", content: \"\" },\n    { dimension: \"Commuting Situation\", content: \"\" }\n  ]);\n  const [customPromptB, setCustomPromptB] = useState(\"\");\n  const [apiKeyB, setApiKeyB] = useState(\"\");\n  const [designGuideB, setDesignGuideB] = useState(\"\");\n  const [userFeedback, setUserFeedback] = useState(\"\");\n  const [suggestedDimensions, setSuggestedDimensions] = useState(\"\");\n  const [loadingB, setLoadingB] = useState(false);\n  const [lastDocIdB, setLastDocIdB] = useState(null);\n\n  const addUserProfile = (group) => {\n    if (group === \"A\") {\n      setUserProfilesA([...userProfilesA, { dimension: \"\", content: \"\" }]);\n    } else {\n      setUserProfilesB([...userProfilesB, { dimension: \"\", content: \"\" }]);\n    }\n  };\n\n  const updateUserProfile = (group, index, field, value) => {\n    if (group === \"A\") {\n      const updatedProfiles = [...userProfilesA];\n      updatedProfiles[index][field] = value;\n      setUserProfilesA(updatedProfiles);\n    } else {\n      const updatedProfiles = [...userProfilesB];\n      updatedProfiles[index][field] = value;\n      setUserProfilesB(updatedProfiles);\n    }\n  };\n\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  const callGPT4oAPI = async (group) => {\n    if ((group === \"A\" && !apiKeyA) || (group === \"B\" && !apiKeyB)) {\n      alert(\"Please provide OpenAI API Key.\");\n      return;\n    }\n\n    if (group === \"B\" && !userFeedback.trim()) {\n      alert(\"Please enter user feedback before generating additional dimensions.\");\n      return;\n    }\n\n    const setLoading = group === \"A\" ? setLoadingA : setLoadingB;\n    const setDesignGuide = group === \"A\" ? setDesignGuideA : setDesignGuideB;\n    const userProfiles = group === \"A\" ? userProfilesA : userProfilesB;\n    const designerGoal = group === \"A\" ? designerGoalA : designerGoalB;\n    const customPrompt = group === \"A\" ? customPromptA : customPromptB;\n    const apiKey = group === \"A\" ? apiKeyA : apiKeyB;\n    const setSuggestedDimensions = group === \"B\" ? setSuggestedDimensions : null;\n\n    setLoading(true);\n    let userProfileText = userProfiles\n      .map((profile, index) => `Dimension ${index + 1}: ${profile.dimension}\\nContent: ${profile.content}`)\n      .join(\"\\n\\n\");\n\n    let fullPrompt = `AI Designer Goal: ${designerGoal}\\n\\nUser Profiles:\\n${userProfileText}\\n\\nCustom Prompt:\\n${customPrompt}`;\n\n    if (group === \"B\") {\n      fullPrompt += `\\n\\nUser Feedback: ${userFeedback}\\n\\nGenerate new Additional Dimensions based on this feedback.`;\n    }\n\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o\",\n          messages: [{ role: \"system\", content: fullPrompt }],\n          max_tokens: 2000,\n          temperature: 0.7\n        })\n      });\n\n      const data = await response.json();\n      const outputText = data.choices[0]?.message?.content || \"Generation failed, please check API request.\";\n      setDesignGuide(outputText);\n\n      if (group === \"B\") {\n        setSuggestedDimensions(outputText);\n      }\n\n      await addDoc(collection(db, \"gpt_interactions\"), {\n        timestamp: new Date().toISOString(),\n        input: fullPrompt,\n        output: outputText,\n        notes: group === \"A\" ? designerNotes : userFeedback,\n        additionalDimensions: group === \"B\" ? outputText : \"\"\n      });\n    } catch (error) {\n      console.error(\"❌ API Request Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"sidebar\">\n        <button onClick={() => setActiveGroup(\"A\")}>Group A (With Expert Designers)</button>\n        <button onClick={() => setActiveGroup(\"B\")}>Group B (Without Expert Designers)</button>\n      </div>\n\n      <div className=\"main-content\">\n        <h1 className=\"page-title\">Human-AI Collaborative Method for Future-Oriented Design Prompt System</h1>\n        \n        <h2>Designer Goal</h2>\n        <textarea\n          placeholder=\"Enter AI designer goal definition...\"\n          value={activeGroup === \"A\" ? designerGoalA : designerGoalB}\n          onChange={(e) => activeGroup === \"A\" ? setDesignerGoalA(e.target.value) : setDesignerGoalB(e.target.value)}\n        />\n        \n        <h2>User Profile (Multiple Dimensions)</h2>\n        {(activeGroup === \"A\" ? userProfilesA : userProfilesB).map((profile, index) => (\n          <div key={index} className=\"user-profile-container\">\n            <input\n              value={profile.dimension}\n              onChange={(e) => updateUserProfile(activeGroup, index, \"dimension\", e.target.value)}\n            />\n            <textarea\n              placeholder={`Enter ${profile.dimension}...`}\n              value={profile.content}\n              onChange={(e) => updateUserProfile(activeGroup, index, \"content\", e.target.value)}\n            />\n          </div>\n        ))}\n        <button className=\"small-button\" onClick={() => addUserProfile(activeGroup)}>Add Dimension</button>\n\n        <button className=\"full-width generate-button\" onClick={() => callGPT4oAPI(activeGroup)}>\n          {activeGroup === \"A\" ? (loadingA ? \"Generating...\" : \"Generate Design Guide\") : (loadingB ? \"Generating...\" : \"Generate Additional Dimensions\")}\n        </button>\n\n        <h2>Design Guide <button className=\"copy-button\" onClick={() => copyToClipboard(activeGroup === \"A\" ? designGuideA : designGuideB)}>Copy</button></h2>\n        <textarea readOnly value={activeGroup === \"A\" ? designGuideA : designGuideB} />\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}